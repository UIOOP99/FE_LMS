[{"/Users/sedali/Documents/MyProjects/felms/src/index.tsx":"1","/Users/sedali/Documents/MyProjects/felms/src/constants/theme.ts":"2","/Users/sedali/Documents/MyProjects/felms/src/Scenes/App.tsx":"3","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/RTLProvider.tsx":"4","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/index.ts":"5","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/Loading.tsx":"6","/Users/sedali/Documents/MyProjects/felms/src/Scenes/routes.tsx":"7","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/examFactory.ts":"8","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/classroomFactory.ts":"9","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/userFactory.ts":"10","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/messageFactory.ts":"11","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/PrivateRoute.tsx":"12","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/scenarios/index.ts":"13","/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/index.js":"14","/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/index.tsx":"15","/Users/sedali/Documents/MyProjects/felms/src/Scenes/TestPage/index.tsx":"16","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/index.tsx":"17","/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/components/ProfileRightSidebar.js":"18","/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/components/EmptySide.js":"19","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/BannerNav.tsx":"20","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/components/LessonRightSidebar.tsx":"21","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/components/LessonCenterSection.tsx":"22","/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/components/ProfileCard.js":"23","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/components/LessonLeftSidebar.tsx":"24","/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/HomeLeftSidebar.tsx":"25","/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/HomeRightSidebar.tsx":"26","/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/HomeCenterSection.tsx":"27","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/scenarios/basicScenario.ts":"28","/Users/sedali/Documents/MyProjects/felms/src/services/LocalStorage/localStorage.ts":"29","/Users/sedali/Documents/MyProjects/felms/src/services/axios/axios.ts":"30","/Users/sedali/Documents/MyProjects/felms/src/services/Contexts/UserContext/index.ts":"31","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/BaseLayout.tsx":"32","/Users/sedali/Documents/MyProjects/felms/src/services/Contexts/UserContext/models.ts":"33","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/LessonsList.js":"34","/Users/sedali/Documents/MyProjects/felms/src/services/axios/axiosInterceptor.ts":"35","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/Spacer.tsx":"36","/Users/sedali/Documents/MyProjects/felms/src/services/hooks/useMessageFilter.ts":"37","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/SendMessage.tsx":"38","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ScrollToTopOnMount.tsx":"39","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/UserCard.tsx":"40","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/MessageList.tsx":"41","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/FilterSelection.tsx":"42","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/CollapseList.tsx":"43","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/SessionsList.js":"44","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ExamCard.js":"45","/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/Navbar.tsx":"46","/Users/sedali/Documents/MyProjects/felms/src/services/api/user/index.ts":"47","/Users/sedali/Documents/MyProjects/felms/src/services/api/lesson/index.ts":"48","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ClassCard.tsx":"49","/Users/sedali/Documents/MyProjects/felms/src/services/api/main/index.ts":"50","/Users/sedali/Documents/MyProjects/felms/src/services/navigation.ts":"51","/Users/sedali/Documents/MyProjects/felms/src/constants/constants.ts":"52","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ProfilePopover.tsx":"53","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/MessageCard.tsx":"54","/Users/sedali/Documents/MyProjects/felms/src/services/utils/i18nUtils.ts":"55","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/MessageListSkeleton.tsx":"56","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/LessonListSkeleton.tsx":"57","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ClassCardSkeleton.tsx":"58","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/sessionFactory.ts":"59","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ExamCardMigrate.tsx":"60","/Users/sedali/Documents/MyProjects/felms/src/services/Contexts/UserContext/UserProvider.tsx":"61","/Users/sedali/Documents/MyProjects/felms/src/services/Contexts/UserContext/UserReducer.ts":"62","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LoginPage/index.tsx":"63"},{"size":969,"mtime":1611587512316,"results":"64","hashOfConfig":"65"},{"size":789,"mtime":1611431710106,"results":"66","hashOfConfig":"65"},{"size":829,"mtime":1611431710100,"results":"67","hashOfConfig":"65"},{"size":375,"mtime":1608810750294,"results":"68","hashOfConfig":"65"},{"size":3634,"mtime":1611587512319,"results":"69","hashOfConfig":"65"},{"size":464,"mtime":1611431710105,"results":"70","hashOfConfig":"65"},{"size":1763,"mtime":1611431032020,"results":"71","hashOfConfig":"65"},{"size":649,"mtime":1611577896232,"results":"72","hashOfConfig":"65"},{"size":852,"mtime":1611577896231,"results":"73","hashOfConfig":"65"},{"size":767,"mtime":1611587512319,"results":"74","hashOfConfig":"65"},{"size":2730,"mtime":1611563989393,"results":"75","hashOfConfig":"65"},{"size":1251,"mtime":1608810750293,"results":"76","hashOfConfig":"65"},{"size":89,"mtime":1611249070402,"results":"77","hashOfConfig":"65"},{"size":457,"mtime":1611431032014,"results":"78","hashOfConfig":"65"},{"size":887,"mtime":1611249070393,"results":"79","hashOfConfig":"65"},{"size":154,"mtime":1608810750292,"results":"80","hashOfConfig":"65"},{"size":504,"mtime":1608810913959,"results":"81","hashOfConfig":"65"},{"size":726,"mtime":1611587512315,"results":"82","hashOfConfig":"65"},{"size":92,"mtime":1611431032011,"results":"83","hashOfConfig":"65"},{"size":567,"mtime":1608815373724,"results":"84","hashOfConfig":"65"},{"size":1458,"mtime":1611577896226,"results":"85","hashOfConfig":"65"},{"size":1754,"mtime":1611577896224,"results":"86","hashOfConfig":"65"},{"size":2788,"mtime":1611587512315,"results":"87","hashOfConfig":"65"},{"size":2493,"mtime":1611587512312,"results":"88","hashOfConfig":"65"},{"size":1039,"mtime":1611587512313,"results":"89","hashOfConfig":"65"},{"size":1085,"mtime":1611577896227,"results":"90","hashOfConfig":"65"},{"size":1507,"mtime":1611577896226,"results":"91","hashOfConfig":"65"},{"size":962,"mtime":1611587512320,"results":"92","hashOfConfig":"65"},{"size":1709,"mtime":1608815373728,"results":"93","hashOfConfig":"65"},{"size":313,"mtime":1608811433834,"results":"94","hashOfConfig":"65"},{"size":651,"mtime":1611587512318,"results":"95","hashOfConfig":"65"},{"size":923,"mtime":1608810913962,"results":"96","hashOfConfig":"65"},{"size":517,"mtime":1611580955090,"results":"97","hashOfConfig":"65"},{"size":1306,"mtime":1611577896229,"results":"98","hashOfConfig":"65"},{"size":2163,"mtime":1608810750413,"results":"99","hashOfConfig":"65"},{"size":358,"mtime":1608810913964,"results":"100","hashOfConfig":"65"},{"size":636,"mtime":1608810913969,"results":"101","hashOfConfig":"65"},{"size":14055,"mtime":1611563995387,"results":"102","hashOfConfig":"65"},{"size":178,"mtime":1611249070396,"results":"103","hashOfConfig":"65"},{"size":1632,"mtime":1611431032019,"results":"104","hashOfConfig":"65"},{"size":1065,"mtime":1611421337430,"results":"105","hashOfConfig":"65"},{"size":2682,"mtime":1611431710104,"results":"106","hashOfConfig":"65"},{"size":1624,"mtime":1611573085155,"results":"107","hashOfConfig":"65"},{"size":1031,"mtime":1611577896230,"results":"108","hashOfConfig":"65"},{"size":2656,"mtime":1608810913963,"results":"109","hashOfConfig":"65"},{"size":3139,"mtime":1611587512314,"results":"110","hashOfConfig":"65"},{"size":723,"mtime":1611587512318,"results":"111","hashOfConfig":"65"},{"size":1477,"mtime":1611563995394,"results":"112","hashOfConfig":"65"},{"size":1041,"mtime":1611577896228,"results":"113","hashOfConfig":"65"},{"size":757,"mtime":1611563995395,"results":"114","hashOfConfig":"65"},{"size":213,"mtime":1608810750414,"results":"115","hashOfConfig":"65"},{"size":359,"mtime":1608810913965,"results":"116","hashOfConfig":"65"},{"size":3095,"mtime":1611587512316,"results":"117","hashOfConfig":"65"},{"size":5698,"mtime":1611431710105,"results":"118","hashOfConfig":"65"},{"size":340,"mtime":1611431710110,"results":"119","hashOfConfig":"65"},{"size":2964,"mtime":1611577896229,"results":"120","hashOfConfig":"65"},{"size":380,"mtime":1611431067451,"results":"121","hashOfConfig":"65"},{"size":882,"mtime":1611431067451,"results":"122","hashOfConfig":"65"},{"size":685,"mtime":1611577896233,"results":"123","hashOfConfig":"65"},{"size":1807,"mtime":1611577896228,"results":"124","hashOfConfig":"65"},{"size":572,"mtime":1611587512317,"results":"125","hashOfConfig":"65"},{"size":543,"mtime":1611587512317,"results":"126","hashOfConfig":"65"},{"size":4998,"mtime":1611587512312,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gvg4x9",{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"132"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"132"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"132"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"152","usedDeprecatedRules":"132"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"132"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"132"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"168","usedDeprecatedRules":"132"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"163"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"132"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"163"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"132"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"193","usedDeprecatedRules":"132"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"132"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"132"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"204","usedDeprecatedRules":"132"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"132"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"132"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"132"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"163"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"219","usedDeprecatedRules":"132"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"132"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"132"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"132"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"132"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"247","usedDeprecatedRules":"132"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"132"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"132"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"278","usedDeprecatedRules":"132"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"281","usedDeprecatedRules":"132"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"132"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"287","usedDeprecatedRules":"132"},"/Users/sedali/Documents/MyProjects/felms/src/index.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/constants/theme.ts",[],["288","289","290"],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/App.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/RTLProvider.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/services/mirage/index.ts",["291"],"import { belongsTo, createServer, hasMany, Model, Serializer } from \"miragejs\";\nimport classroomFactory from \"./factories/classroomFactory\";\nimport examFactory from \"./factories/examFactory\";\nimport messageFactory from \"./factories/messageFactory\";\nimport sessionFactory from \"./factories/sessionFactory\";\nimport userFactory from \"./factories/userFactory\";\nimport scenarios from \"./scenarios\";\n\ncreateServer({\n  models: {\n    user: Model.extend({\n      classroom: hasMany(\"classroom\"),\n    }),\n    classroom: Model.extend({\n      members: hasMany(\"user\"),\n      sessions: hasMany(\"session\"),\n      exams: hasMany(\"exam\"),\n    }),\n    message: Model.extend({\n      user: belongsTo(\"user\"),\n      classroom: belongsTo(\"classroom\"),\n    }),\n    exam: Model.extend({\n      classroom: belongsTo(\"classroom\"),\n    }),\n    session: Model.extend({\n      classroom: belongsTo(\"classroom\"),\n    }),\n  },\n\n  factories: {\n    user: userFactory,\n    classroom: classroomFactory,\n    message: messageFactory,\n    exam: examFactory,\n    session: sessionFactory,\n  },\n\n  serializers: {\n    message: Serializer.extend({\n      include: [\"user\", \"classroom\"],\n    }),\n    user: Serializer.extend({\n      include: [\"classroom\"],\n    }),\n    classroom: Serializer.extend({\n      include: [\"user\"],\n    }),\n  },\n\n  seeds: scenarios.basic,\n\n  routes() {\n    this.get(\"api/home/messages\", (schema: any, req) => {\n      const { filter } = req.queryParams;\n      if (filter) {\n        return schema.messages.where({ messageType: filter });\n      }\n      return schema.messages.all();\n    });\n    this.get(\"api/lesson/:id/classroom\");\n    this.get(\"api/lesson/:lessonId/messages\", (schema: any, req) => {\n      const { lessonId } = req.params;\n      const { filter } = req.queryParams;\n      const { name: lessonName } = schema.classrooms.find(lessonId);\n      if (filter) {\n        return schema.messages.where({\n          classRoomName: lessonName,\n          messageType: filter,\n        });\n      }\n      return schema.messages.where({ classRoomName: lessonName });\n    });\n    this.get(\"api/lesson/:lessonId/members\", (schema: any, req) => {\n      const { lessonId } = req.params;\n      const { members } = schema.classrooms.find(lessonId);\n      return members;\n    });\n    this.get(\"api/lesson/:lessonId/exams\", (schema: any, req) => {\n      const { lessonId } = req.params;\n      const exams = schema.exams.where({ classroomId: lessonId });\n      return exams;\n    });\n    this.get(\"api/lesson/:lessonId/sessions\", (schema: any, req) => {\n      const { lessonId } = req.params;\n      const sessions = schema.sessions.where({ classroomId: lessonId });\n      return sessions;\n    });\n    this.get(\"api/users/:userId/lessons\", (schema: any, req) => {\n      const { userId } = req.params;\n      // console.log(schema.users.find(userId));\n      const lessons = schema.classrooms.where({ membersId: userId });\n\n      return schema.classrooms.all();\n      // return lessons;\n    });\n  },\n});\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/Loading.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/routes.tsx",["292"],"import React, { lazy } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { TPermissions } from \"services/role/model\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nconst LessonPage = lazy(() => import(\"./LessonPage\"));\nconst TestPage = lazy(() => import(\"./TestPage\"));\nconst MainPage = lazy(() => import(\"./MainPage\"));\nconst LoginPage = lazy(() => import(\"./LoginPage\"));\nconst ProfilePage = lazy(() => import(\"./ProfilePage\"));\n\nexport interface IRoute {\n  path?: string | string[];\n  component: React.FC<any>;\n  exact?: boolean;\n  routes?: IRoute[];\n  private?: boolean;\n  notHaveBaseLayout?: boolean;\n  toHavePermissions?: TPermissions[];\n}\n\nconst routes: IRoute[] = [\n  {\n    path: \"/\",\n    component: MainPage,\n    exact: true,\n  },\n  {\n    path: \"/lesson/:id\",\n    component: LessonPage,\n  },\n  {\n    path: \"/test\",\n    component: TestPage,\n  },\n  {\n    path: \"/login\",\n    component: LoginPage,\n  },\n  {\n    path: \"/profile/:id\",\n    component: ProfilePage,\n  },\n];\n\nexport const renderRoutes = (routes: IRoute[]) => {\n  return routes.map((route, key) => {\n    if (route.private) {\n      return <PrivateRoute {...route} key={key} />;\n    } else {\n      return (\n        <Route\n          key={key}\n          {...route}\n          component={undefined}\n          render={(props) => {\n            if (route.notHaveBaseLayout) {\n              return (\n                <route.component {...props} routes={route.routes} key={key} />\n              );\n            } else {\n              return (\n                // <BaseLayout>\n                <route.component {...props} routes={route.routes} key={key} />\n                // </BaseLayout>\n              );\n            }\n          }}\n        />\n      );\n    }\n  });\n};\nexport default routes;\n","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/examFactory.ts",["293"],"import { Factory, Server } from \"miragejs\";\n\nexport default Factory.extend({\n  title: (i: number) => [\"آزمون ۱\", \"آزمون 2\", \"آزمون ۴\", \"آزمون ۳\"][i % 2],\n  date: (i: number) =>\n    [\" ۵ آذر\", \" ۱۸ آذر\", \"۲۵ دی\", \" ۳۰ مهر\", \" ۱۵ آبان\"][i % 2],\n  time: (i: number) =>\n    [\"۲۰ دقیقه\", \"۲۰ دقیقه\", \"۳۰ دقیقه\", \"۷۰ دقیقه\", \"۷۰ دقیقه\", \"۶۰ دقیقه\"][\n      i % 2\n    ],\n  status: (i: number) => [\"active\", \"inactive\"][i % 2],\n  afterCreate(exam: any, server: Server) {\n    exam.update({\n      classroom: exam.classroom || server.create(\"classroom\"),\n    });\n  },\n});\n","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/classroomFactory.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/userFactory.ts",["294","295"],"import { random, sample } from \"lodash\";\nimport { Factory } from \"miragejs\";\n\nexport default Factory.extend({\n  fullName: (i: number) =>\n    [\n      \"امیرمحمد چراغی\",\n      \"سیدعلی سجادی\",\n      \"امیررضا اسماعیلی\",\n      \"امیرمهدی سلیمانی\",\n      \"سجاد یزدان پرست\",\n    ][i % 5],\n  avatarUrl() {\n    return `https://i.pravatar.cc/150?u=${this.idNumber}`;\n  },\n  idNumber: () =>\n    `${sample([\n      \"963613045\",\n      \"963613009\",\n      \"963613011\",\n      \"963613012\",\n      \"963613050\",\n    ])}`,\n  // afterCreate(user: any, server: any) {\n  //   user.update({\n  //     classrooms: server.createList(\"classroom\", random(1, 20)),\n  //   });\n  // },\n});\n","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/messageFactory.ts",["296"],"import { random, range, sample } from \"lodash\";\nimport { Factory, Server } from \"miragejs\";\n\nexport default Factory.extend({\n  userFullName: () => sample([\n    \"امیرمحمد چراغی\",\n    \"سیدعلی سجادی\",\n    \"امیررضا اسماعیلی\",\n    \"امیرمهدی سلیمانی\",\n    \"سجاد یزدان پرست\",\n  ]),\n  classRoomName: () => sample([\n    \"کلاس طراحي شي گراي سيستم ها-۰۱\",\n    \"کلاس اقتصاد مهندسي-۰۱\",\n    \"کلاس مهندسي اينترنت-۰۱\",\n    \"کلاس آزمايشگاه شبكه هاي كامپيوتري-۰۶\",\n  ]),\n  message: () => {\n    return 'لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ و با استفاده از طراحان گرافیک است. چاپگرها و متون بلکه روزنامه و مجله در ستون و سطرآنچنان که لازم است و برای شرایط فعلی تکنولوژی مورد نیاز و کاربردهای متنوع با هدف بهبود ابزارهای کاربردی می باشد. کتابهای زیادی در شصت و سه درصد گذشته، حال و آینده شناخت فراوان جامعه و متخصصان را می طلبد تا با نرم افزارها شناخت بیشتری را برای طراحان رایانه ای علی الخصوص طراحان خلاقی و فرهنگ پیشرو در زبان فارسی ایجاد کرد. در این صورت می توان امید داشت که تمام و دشواری موجود در ارائه راهکارها و شرایط سخت تایپ به پایان رسد وزمان مورد نیاز شامل حروفچینی دستاوردهای اصلی و جوابگوی سوالات پیوسته اهل دنیای موجود طراحی اساسا مورد استفاده قرار گیرد.';\n  },\n  messageDate: () => new Date(2020, Math.random() * 11, Math.random() * 29),\n  messageType: () => sample(['message', 'assignment']),\n  attachedFiles: () => {\n    const count = random(10);\n    return range(count).map((i) => ({ fileName: `file_${i}.pdf`, fileUrl: 'url'}));\n  },\n  userAnswers: () => {\n    const count = random(10);\n    return range(count).map((i) => ({\n      userFullName: sample([\n        \"امیرمحمد چراغی\",\n        \"سیدعلی سجادی\",\n        \"امیررضا اسماعیلی\",\n        \"امیرمهدی سلیمانی\",\n        \"سجاد یزدان پرست\",\n      ]),\n       answer: `جواب سوال ${i}`\n    }));\n  },\n  afterCreate(message: any, server: Server) {\n    message.update({\n      user: server.create('user'),\n      classroom: message.classroom || server.create('classroom'),\n    });\n  }\n});","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/PrivateRoute.tsx",["297","298"],"import React from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\nimport { IRoute } from \"Scenes/routes\";\nimport { useUserState } from \"services/Contexts/UserContext\";\n\nconst PrivateRoute: React.FC<RouteProps & { component: any } & IRoute> = ({\n  component: Component,\n  ...rest\n}) => {\n  //   const { toHavePermissions } = rest;\n  const user = useUserState();\n\n  // const userPermissions = rules[user.rule].static;\n  // console.log(userPermissions);\n\n  // const canRender = toHavePermissions?.some((item) => {\n  //   return userPermissions.some((perm) => item === perm);\n  // });\n  //   const canRender = check(user , toHavePermissions)\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return (\n          <>\n            {user.isAuth ? (\n              <Component routes={rest.routes} {...props} />\n            ) : (\n              <>\n                {/* {toast.error(\"برای ادامه وارد شوید\")} */}\n                <Redirect\n                  to={{\n                    pathname: \"/\",\n                    state: { from: props.location },\n                  }}\n                />\n              </>\n            )}\n          </>\n        );\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/scenarios/index.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/index.js",[],["299","300","301"],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/index.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/TestPage/index.tsx",["302","303","304","305"],"import React from 'react'\n\nconst index = () => {\n    return (\n        <div>\n           this is a test page  \n        </div>\n    )\n}\n\nexport default index\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/index.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/components/ProfileRightSidebar.js",["306","307"],"import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport LessonsList from 'Scenes/components/LessonsList';\n\n\nconst ProfileRightSidebar = () => {\n  const { id: idNumber } = useParams();\n\n  return (\n     <LessonsList idNumber={idNumber}/>\n  );\n};\n\nexport default ProfileRightSidebar;\n\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/components/EmptySide.js",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/BannerNav.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/components/LessonRightSidebar.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/components/LessonCenterSection.tsx",["308"],"import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport FilterSelection from \"Scenes/components/FilterSelection\";\nimport { IMessageCardProps } from \"Scenes/components/MessageCard\";\nimport MessageList from \"Scenes/components/MessageList\";\nimport MessageCardSkeleton from \"Scenes/components/MessageListSkeleton\";\nimport ScrollToTopOnMount from \"Scenes/components/ScrollToTopOnMount\";\nimport SendMessage from \"Scenes/components/SendMessage\";\nimport Spacer from \"Scenes/components/Spacer\";\nimport {\n  classroomInfoFetcher,\n  classroomInfoKey,\n  lessonMessagesFetcher,\n  lessonMessagesKey,\n} from \"services/api/lesson\";\nimport useMessageFilter from \"services/hooks/useMessageFilter\";\nimport useSWR from \"swr\";\n\nconst LessonCenterSection = () => {\n  const { id: lessonId } = useParams<{ id: string }>();\n  const [filter] = useMessageFilter();\n  const { data: messages } = useSWR<IMessageCardProps[]>(\n    [lessonMessagesKey, lessonId, filter.query],\n    lessonMessagesFetcher\n  );\n  const { data: classroomInfo } = useSWR(\n    [classroomInfoKey, lessonId],\n    classroomInfoFetcher\n  );\n  const messageCardMocks =\n    messages?.sort(\n      (a, b) =>\n        new Date(b.messageDate).getTime() - new Date(a.messageDate).getTime()\n    ) || [];\n\n  return (\n    <>\n      <ScrollToTopOnMount />\n      {/* <Filler height=\"100px\" text=\"insert create post component here\"/> */}\n      <SendMessage classroomId={lessonId} />\n      <Spacer spacing={2} orientation=\"h\" />\n      <FilterSelection title={classroomInfo?.name} />\n      <Spacer spacing={2} orientation=\"h\" />\n      {messages ? (\n        <MessageList messages={messageCardMocks} />\n      ) : (\n        <MessageCardSkeleton />\n      )}\n    </>\n  );\n};\n\nexport default LessonCenterSection;\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/components/ProfileCard.js",["309"],"import React from \"react\";\nimport useSWR from \"swr\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  makeStyles,\n  Grid,\n  Card,\n  Typography,\n  ButtonBase,\n} from \"@material-ui/core\";\n\nimport { profileFetcher, profileKey } from \"services/api/user\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    width: \"100%\",\n  },\n  image: {\n    width: 200,\n    height: 200,\n  },\n\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n  text: {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function ProfileCard() {\n  const classes = useStyles();\n  const { id: userId } = useParams();\n\n  const { data } = useSWR([profileKey, userId], profileFetcher);\n\n  // console.log(data);\n  // const { avatarUrl, fullName, username, idNumber, role } = mockedData;\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.paper}>\n        <Grid container spacing={2}>\n          <Grid item>\n            <ButtonBase className={classes.image}>\n              <img\n                className={classes.img}\n                alt=\"complex\"\n                src={data?.avatarUrl}\n              />\n            </ButtonBase>\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <Typography\n                  className={classes.text}\n                  variant=\"body1\"\n                  gutterBottom\n                >\n                  نام و نام خانوادگی: {data?.fullName}\n                </Typography>\n                <Typography\n                  className={classes.text}\n                  gutterBottom\n                  variant=\"body1\"\n                >\n                  نام کاربری: {data?.idNumber}\n                </Typography>\n                <Typography\n                  className={classes.text}\n                  gutterBottom\n                  variant=\"body1\"\n                >\n                  شماره کاربری: {data?.idNumber}\n                </Typography>\n                <Typography\n                  className={classes.text}\n                  gutterBottom\n                  variant=\"body1\"\n                >\n                  سطح کاربری: {data?.role === \"student\" ? \"دانشجو\" : \"استاد\"}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Card>\n    </div>\n  );\n}\n\nconst mockedData = {\n  avatarUrl:\n    \"http://lms.ui.ac.ir/publicnew/user/8f/9d/04/494f6_497c.jpg?c=d111\",\n  fullName: \"امیر مهدی\",\n  username: \"amirmahdi\",\n  idNumber: \"963613051\",\n  role: \"دانشجو\",\n};\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/components/LessonLeftSidebar.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/HomeLeftSidebar.tsx",["310","311"],"import React from \"react\";\nimport LessonsListSkeleton from \"Scenes/components/LessonListSkeleton\";\nimport SessionsList from \"Scenes/components/SessionsList\";\nimport { ISession } from \"Scenes/LessonPage/components/LessonLeftSidebar\";\nimport { sessionsFetcher, sessionsKey } from \"services/api/user\";\nimport { useUserState } from \"services/Contexts/UserContext\";\nimport useSWR from \"swr\";\n\nconst HomeLeftSideBar = () => {\n  const { idNumber } = useUserState();\n  const { data } = useSWR<ISession[]>([sessionsKey, idNumber], sessionsFetcher);\n  console.log(data, \"home left\");\n\n  return data ? <SessionsList sessions={data} /> : <LessonsListSkeleton />;\n};\n\nexport default HomeLeftSideBar;\n\nconst sessionsMock = [\n  {\n    title: \"مباحث ویژه 1\",\n    date: \"22 آذر 99 ساعت 18:00\",\n    status: \"عدم حضور استاد\",\n  },\n  { title: \"زبان تخصصی\", date: \"12 دی 99 ساعت 10:00\", status: \"در حال ضبط\" },\n  { title: \"مهندسی نت\", date: \"08 مهر 99 ساعت 21:00\", status: \"ضبط شده\" },\n];\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/HomeRightSidebar.tsx",["312"],"import React from \"react\";\nimport LessonsListSkeleton from \"Scenes/components/LessonListSkeleton\";\nimport LessonsList from \"Scenes/components/LessonsList\";\nimport { lessonsFetcher, lessonsKey } from \"services/api/user\";\nimport { useUserState } from \"services/Contexts/UserContext\";\nimport useSWR from \"swr\";\n\nexport interface ILesson {\n  id: number;\n  name: string;\n  lessonCode: string;\n  memberCount: number;\n}\nconst HomeRightSidebar = () => {\n  const { idNumber, id } = useUserState();\n\n  const { data: lessonData } = useSWR<{ classrooms: ILesson[] }>(\n    [lessonsKey, id],\n    lessonsFetcher\n  );\n  // console.log(lessonData);\n\n  // useEffect(() => {\n  //   const fetchDate = async () => {\n  //     const res = await axiosInstance.get(`/users/${id}/lessons`);\n  //     console.log(res.data);\n  //   };\n  //   fetchDate();\n  // }, [id]);\n  console.log(lessonData)\n\n  return !!lessonData ? (\n    <LessonsList\n      idNumber={idNumber}\n      lessons={lessonData.classrooms.slice(0, 8)}\n    />\n  ) : (\n    <LessonsListSkeleton />\n  );\n  // return\n};\n\nexport default HomeRightSidebar;\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/HomeCenterSection.tsx",["313"],"import React from \"react\";\nimport FilterSelection from \"Scenes/components/FilterSelection\";\nimport MessageList from \"Scenes/components/MessageList\";\nimport MessageListSkeleton from \"Scenes/components/MessageListSkeleton\";\nimport ScrollToTopOnMount from \"Scenes/components/ScrollToTopOnMount\";\nimport SendMessage from \"Scenes/components/SendMessage\";\nimport Spacer from \"Scenes/components/Spacer\";\nimport {\n  timelineMessagesFetcher,\n  timelineMessagesKey,\n} from \"services/api/main\";\nimport useMessageFilter from \"services/hooks/useMessageFilter\";\nimport useSWR from \"swr\";\nimport { IMessageCardProps } from \"../../components/MessageCard\";\n\nconst HomeCenterSection = () => {\n  const [filter] = useMessageFilter();\n  const { data: messages } = useSWR<IMessageCardProps[]>(\n    [timelineMessagesKey, filter.query],\n    timelineMessagesFetcher\n  );\n  const messageCardMocks =\n    messages?.sort(\n      (a, b) =>\n        new Date(b.messageDate).getTime() - new Date(a.messageDate).getTime()\n    ) || [];\n\n  return (\n    <>\n      <ScrollToTopOnMount />\n      {/* <Filler height=\"100px\" text=\"insert create post component here\"/> */}\n      <SendMessage />\n      <Spacer spacing={2} orientation=\"h\" />\n      <FilterSelection title=\"تایم‌لاین\" />\n      <Spacer spacing={2} orientation=\"h\" />\n      {/* <MessageListSkeleton/> */}\n      {messages ? (\n        <MessageList messages={messageCardMocks} />\n      ) : (\n        <MessageListSkeleton />\n      )}\n    </>\n  );\n};\n\nexport default HomeCenterSection;\n","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/scenarios/basicScenario.ts",["314"],"import { sample } from \"lodash\";\nimport { Server } from \"miragejs\";\n\nexport default (server: Server) => {\n  // server.createList('user', 5);\n\n  server.schema.create(\"user\", {\n    fullName: \"صادق فرامرزی\",\n    idNumber: \"963613048\",\n    avatarUrl: `https://i.pravatar.cc/150?u=${963613048}`,\n    role :'student'\n  }) as any;\n  server.schema.create(\"user\", {\n    fullName: \"بابک مرادی\",\n    idNumber: \"123456789\",\n    avatarUrl: `https://i.pravatar.cc/150?u=${123456789}`,\n    role : 'professor'\n  }) as any;\n  const classrooms = server.createList(\"classroom\", 4);\n  // classrooms.forEach((cr) => server.createList('exam', 15, { cr }));\n\n  const exams = server.createList(\"exam\", 15);\n  const sessions = server.createList(\"session\", 20);\n  exams.forEach((exam) => exam.update({ classroom: sample(classrooms) }));\n  sessions.forEach((session) =>\n    session.update({ classroom: sample(classrooms) })\n  );\n  server.createList(\"message\", 15);\n};\n","/Users/sedali/Documents/MyProjects/felms/src/services/LocalStorage/localStorage.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/services/axios/axios.ts",["315"],"import axios from \"axios\";\nimport {axiosInterceptor} from \"./axiosInterceptor\"\nconst baseURL = \"/api\";\nexport const axiosInstance = axios.create({\n  baseURL,\n});\n\n// export const axiosInstanceNoAuth = axios.create({\n//   baseURL: \"https://api.restino.ir/accounts/api/v1\",\n// });\n\naxiosInterceptor(axiosInstance);\n","/Users/sedali/Documents/MyProjects/felms/src/services/Contexts/UserContext/index.ts",["316","317","318","319"],"import { createContext, Dispatch, useContext } from \"react\";\nimport { AppActions } from \"../AppActions\";\nimport { IUserState } from \"./models\";\nexport const initial: IUserState = {\n  username: \"amirreza\",\n  idNumber: \"963613009\",\n  fullName: \"امیررضا اسماعیلی\",\n  isAuth: true,\n  role: \"professor\",\n  id : 1\n};\n\nexport const userContext = createContext<IUserState>(initial);\nexport const userDispatchContext = createContext<Dispatch<AppActions>>(\n  () => {}\n);\n\nexport const useUserState = () => useContext(userContext);\nexport const useUserDispatch = () => useContext(userDispatchContext);\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/BaseLayout.tsx",["320"],"import { Grid } from '@material-ui/core';\nimport React, { ComponentType } from 'react';\nimport Navbar from 'Scenes/MainPage/components/Navbar';\nimport Spacer from './Spacer';\n\ninterface IBaseLayoutProps {\n  CenterComponent: ComponentType,\n  RightComponent: ComponentType,\n  LeftComponent: ComponentType,\n}\n\nconst BaseLayout = ({CenterComponent, RightComponent, LeftComponent}: IBaseLayoutProps ) => {\n  return (\n    <Grid container direction=\"column\">\n      <Navbar />\n      <Spacer spacing={2} orientation=\"h\"/>\n      <Grid item xs container wrap=\"nowrap\">\n        <Grid item xs={3}>\n          <RightComponent />\n        </Grid>\n        <Spacer spacing={2} orientation=\"v\"/>\n        <Grid item xs>\n          <CenterComponent />\n        </Grid>\n        <Spacer spacing={2} orientation=\"v\"/>\n        <Grid item xs={3}>\n          <LeftComponent />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default BaseLayout;","/Users/sedali/Documents/MyProjects/felms/src/services/Contexts/UserContext/models.ts",["321"],"import { IRules } from \"services/role/model\";\n\nexport interface IUserState {\n  id : number ;\n  username: string;\n  fullName?: string,\n  idNumber?: string,\n  avatarUrl?: string,\n  isAuth: boolean;\n  role: keyof IRules;\n}\n//-----------user acitions------------------\nexport enum EUserActionTypes {\n  LOGIN,\n  LOGOUT,\n}\ninterface ILoginAction {\n  type: EUserActionTypes.LOGIN;\n  payload: IUserState;\n}\ninterface ILogoutAction {\n  type: EUserActionTypes.LOGOUT;\n}\n\nexport type UserActions = ILoginAction | ILogoutAction;\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/LessonsList.js",["322","323","324","325","326"],"import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useSWR from \"swr\";\nimport ClassTwoToneIcon from \"@material-ui/icons/ClassTwoTone\";\n\nimport { lessonsFetcher, lessonsKey } from \"services/api/user\";\nimport ClassCard from \"Scenes/components/ClassCard\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function LessonsList({ idNumber, lessons }) {\n  //  const { data: { lessons } } = useSWR([lessonsKey, userId], lessonsFetcher);\n  //   const lessons = lessonsMock;\n  const history = useHistory();\n\n  const handleItemOnClick = (id) => history.push(`lesson/${id}`);\n  console.log(lessons);\n\n  return (\n    <Fragment>\n      {lessons.map((lesson) => (\n        <ClassCard\n          onClick={() => handleItemOnClick(lesson.id)}\n          key={lesson.id}\n          Icon={ClassTwoToneIcon}\n          title={lesson.name}\n          primaryDesc={`کد درس ${lesson.lessonCode}`}\n          secondaryDesc={`${lesson.memberCount} عضو`}\n        />\n      ))}\n    </Fragment>\n  );\n}\n\nconst lessonsMock = [\n  { id: \"30\", title: \"مهندسی نت\", code: \"36-20-027\", memebersNumber: \"42\" },\n  { id: \"30\", title: \"مباحث ویژه 1\", code: \"36-21-025\", memebersNumber: \"29\" },\n  { id: \"30\", title: \"زبان تخصصی\", code: \"36-21-366\", memebersNumber: \"12\" },\n];\n","/Users/sedali/Documents/MyProjects/felms/src/services/axios/axiosInterceptor.ts",["327","328","329"],"import { AxiosInstance } from \"axios\";\nimport { redirect } from \"services/navigation\";\nimport { createTokenObj, LSService } from \"../LocalStorage/localStorage\";\nimport { IRefreshTokenResponse } from \"./types\";\n\nlet isProfileReq = false;\n\nexport const axiosInterceptor = (axiosInstance: AxiosInstance) => {\n  axiosInstance.interceptors.request.use(\n    (config) => {\n      const token = LSService.getAccessToken();\n      if (token) {\n        config.headers[\"Authorization\"] = `Bearer ${token}`;\n      }\n      // config.headers[\"Content-type\"] = \"aapplication/json\";\n      return config;\n    },\n    (error) => {\n      Promise.reject(error);\n    }\n  );\n  axiosInstance.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      const originalRequest = error.config;\n      if (originalRequest.url === \"/accounts/api/v1/profile/\")\n        isProfileReq = true;\n\n      if (\n        error.response?.status === 401 &&\n        originalRequest.url === \"/accounts/api/v1/refresh-token/\"\n      ) {\n        LSService.clearToken();\n        !isProfileReq && redirect(\"/login\");\n        return Promise.reject(error);\n      }\n\n      if (\n        error.response?.status === 401 &&\n        !originalRequest._retry &&\n        originalRequest.url !== \"/accounts/api/v1/authenticate/\" &&\n        LSService.getRefreshToken()\n      ) {\n        originalRequest._retry = true;\n\n        return axiosInstance\n          .post<IRefreshTokenResponse>(\"/accounts/api/v1/refresh-token/\", {\n            refresh: LSService.getRefreshToken(),\n          })\n          .then((res) => {\n            if (res.status === 200) {\n              //1)save token in ls\n              LSService.setToken(\n                createTokenObj(res.data.access, LSService.getRefreshToken())\n              ); //res.data is an object {access , refresh}\n              //2)Change Authoriazation Header\n              axiosInstance.defaults.headers.common[\n                \"Authorization\"\n              ] = `Bearer ${LSService.getAccessToken()}`;\n              return axiosInstance(originalRequest);\n            }\n            return null;\n          });\n      }\n      return Promise.reject(error);\n    }\n  );\n};\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/Spacer.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/services/hooks/useMessageFilter.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/SendMessage.tsx",["330"],"// import components\nimport React, {useState, useRef} from \"react\";\nimport { useUserState } from 'services/Contexts/UserContext';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport { Avatar, Card, Grid, IconButton } from \"@material-ui/core\";\nimport { AccountBalance, ArrowBackIos, CloudUpload } from \"@material-ui/icons\";\nimport useSWR from \"swr\";\nimport { classroomInfoFetcher, classroomInfoKey } from \"services/api/lesson\";\n\n// style of components\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            padding: theme.spacing(2),\n        },\n        root: {\n            '& .MuiTextField-root': {\n                margin: theme.spacing(1),\n                width: '100%'\n            },\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        },\n        row: {\n            width: '100%',\n            display: 'flex',\n        },\n        formControl: {\n            // margin: theme.spacing(1),\n            // marginRight: theme.spacing(4),\n            minWidth: theme.spacing(15),\n        },\n        spanOfFileName : {\n            fontSize: '0.8rem',\n            margin: theme.spacing(1),\n            display: 'flex',\n            alignItems: 'center',\n        },\n        chooseClass : {\n            marginLeft: 'auto',\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n        chooseFile : {\n            position: 'absolute',\n            opacity : 0,\n            maxWidth: theme.spacing(6)\n        },\n        submitBtn : {\n            // margin: theme.spacing(1),\n            // padding : theme.spacing(1),\n            // paddingLeft: theme.spacing(4),\n            // paddingRight: theme.spacing(4),\n        },\n        alert : {\n            width: '100%',\n            // '& > * + *': {\n            //     marginTop: theme.spacing(2),\n            // },\n            margin: theme.spacing(1),\n        },\n        gridItemCenter: {\n            display: 'flex',\n            alignItems: 'center',\n        },\n        avatar: {\n          width: theme.spacing(6),\n          height: theme.spacing(6),\n        },\n        textfieldContainer: {\n            paddingRight: theme.spacing(1),\n        },\n        classIconContainer: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: theme.spacing(8),\n        },\n        classIcon: {\n            width: theme.spacing(4),\n            height: theme.spacing(4),\n            color: theme.palette.primary.dark,\n        }\n    }),\n);\n\nconst SendMessage = ({classroomId}: {classroomId?: string}) => {\n\n    const {avatarUrl} = useUserState();\n    const classes = useStyles();\n\n    // handler and state of text area component\n    console.log('__', classroomId);\n    \n    const { data: classroomInfo } = useSWR([classroomInfoKey, classroomId], classroomInfoFetcher);\n    const [textValue, setTextValue] = useState('');\n    const handleChangeTextArea = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setTextValue(event.target.value);\n    };\n\n    // handler and state of select class component\n    const [classState, setClassState] = useState('');\n    const handleChangeClass = (event: React.ChangeEvent<{ value: unknown }>) => {\n        let classChosen: string = event.target.value as string;\n        setClassState(classChosen);\n    };\n\n    // get list of class from backEnd\n    const listOfClass = () => {\n        let classList = [];\n\n        // request for get list of classes that this user member of that\n        // axiosInstance.post(\"/classlist\", userIdNumber).then( res =>{\n        //     classList = res.classes;\n        // })\n        //     .catch(error => {\n        //         alert(error);\n        //     });\n\n        classList = [\"طراحی شی گرا\", \"سیگنال و سیستم\", \"مهندسی اینترنت\", \"رایانش امن\"];\n        return (\n            classList.map( (className) => <MenuItem value={className}>{className}</MenuItem>)\n        );\n    };\n\n\n    const fileInput = useRef(null);\n    const [fileState, setFileState] = useState({\n        visibilityFileButton: false,\n        hasFile: false,\n        fileName: \"\",\n    });\n    // define component for select file\n    const ChooseFile = () => {\n        if (fileState.visibilityFileButton){\n            return (\n                <Grid className={classes.gridItemCenter} item>\n                    <IconButton>\n                        <input className={classes.chooseFile} type=\"file\" onChange={handleSelectFile} ref={fileInput}/>\n                        <CloudUpload />\n                    </IconButton>\n                    {showFileName()}\n                </Grid>\n            );\n        }\n        return null;\n    };\n\n    // this function for show a span include file name\n    const showFileName = () => {\n        return fileState.hasFile ? <span className={classes.spanOfFileName}>فایل انتخاب شده: <b>{fileState.fileName}</b></span> : null;\n    };\n\n    // this function call when attacked file selected\n    const handleSelectFile = (event: React.ChangeEvent<HTMLInputElement>) => {\n\n        // this if for check that file is selected\n        if (event.target.files![0] !== undefined){\n            setFileState((prevState) => ({\n                    ...prevState,\n                    hasFile: true,\n                    fileName: event.target.files![0].name,\n                })\n            );\n        }\n\n    };\n\n\n    const [typeOfMessageState, setTypeOfMessageState] = useState('');\n    const handleChangeSelectType = (event: React.ChangeEvent<{ value: unknown }>) => {\n        let typeChosen: string = event.target.value as string;\n        setTypeOfMessageState(typeChosen);\n\n        if ( typeChosen === 'homeWork' ){\n            setFileState((prevState) => ({\n                    ...prevState,\n                    visibilityFileButton: true,\n                })\n            );\n        }\n        else {\n            setFileState((prevState) => ({\n                    ...prevState,\n                    visibilityFileButton: false,\n                })\n            );\n        }\n    };\n\n    const submitForm = (event: React.FormEvent) => {\n\n        event.preventDefault();\n\n        if ( classState === '' ){\n            setAlertState({\n                showAlert: true,\n                alertText: 'لطفا یک کلاس برای ارسال پیام انتخاب کنید.',\n                isError: true\n            });\n        }\n        else if (typeOfMessageState === ''){\n            setAlertState({\n                showAlert: true,\n                alertText: 'لطفا نوع پیام را مشخص کنید.',\n                isError: true\n            });\n        }\n        else {\n\n            // @ts-ignore\n            const [attachedFile] = fileInput.current.files;\n            let fileData = new FormData();\n            fileData.append('file-homeWork', attachedFile);\n            // let message = {\n            //     idSender : userIdNumber,\n            //     messageType : typeOfMessageState,\n            //     messageText : textValue,\n            //     messageClass : classState,\n            //     hasFile : fileState.hasFile,\n            //     file : fileData\n            // };\n\n            //send message for backEnd\n            // axiosInstance.post(\"/sendMessage\", message).then( res =>{\n            //     if (res.status=== 'ack') {\n            //         setAlertState({\n            //             showAlert: true,\n            //             alertText: 'پیام شما با موفقیت ثبت شد.',\n            //             isError: false\n            //         });\n            // })\n            //     .catch(error => {\n            //         alert(error);\n            //     });\n            setAlertState({\n                showAlert: true,\n                alertText: 'پیام شما با موفقیت ثبت شد.',\n                isError: false\n            });\n\n            // reset states\n            setTimeout(() => {\n                setTextValue('');\n                setTypeOfMessageState('');\n                setClassState('');\n                setFileState({\n                    visibilityFileButton: false,\n                    hasFile: false,\n                    fileName: \"\",\n                });\n                setAlertState({\n                    showAlert: false,\n                    alertText: '',\n                    isError: false\n                });\n            }, 500);\n        }\n    };\n\n    const [alertState, setAlertState] = useState({\n        showAlert: false,\n        alertText: '',\n        isError: false\n    });\n    const showAlert = () => {\n        if (alertState.showAlert){\n            if (alertState.isError){\n                return (\n                    <Alert className={classes.alert} variant=\"filled\" severity=\"error\">\n                        {alertState.alertText}\n                    </Alert>\n                );\n            }\n            else {\n                return (\n                    <Alert className={classes.alert} variant=\"filled\" severity=\"success\">\n                        {alertState.alertText}\n                    </Alert>\n                );\n            }\n        }\n        return null;\n    };\n\n    return (\n        <Card className={classes.container} elevation={0}>\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={submitForm}>\n                <Grid className={classes.textfieldContainer} container spacing={2}>\n                    <Grid className={classes.gridItemCenter} item>\n                        <Avatar className={classes.avatar} src={avatarUrl}/>\n                    </Grid>\n                    <Grid item xs>\n                        <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"متن پیام\"\n                            multiline\n                            size=\"small\"\n                            rows={2}\n                            variant=\"outlined\"\n                            value={textValue}\n                            onChange={handleChangeTextArea}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid className={classes.classIconContainer} item >\n                        <AccountBalance className={classes.classIcon} />\n                    </Grid>\n                    <Grid className={classes.gridItemCenter} item>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            {/* <InputLabel id=\"demo-simple-select-outlined-label\">انتخاب کلاس</InputLabel> */}\n                            {\n                                !!classroomId ?\n                                <TextField \n                                    value={classroomInfo?.name}\n                                    disabled={!!classroomId} \n                                    variant=\"outlined\"      \n                                    size=\"small\"                     \n                                />\n                                :\n                                <TextField\n                                    // labelId=\"demo-simple-select-outlined-label\"\n                                    select\n                                    id=\"demo-simple-select-outlined\"\n                                    value={classState}\n                                    onChange={handleChangeClass}\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    label=\"انتخاب کلاس\"\n                                >\n                                    {listOfClass()}\n                                </TextField>\n                            }\n                        </FormControl>\n                    </Grid>\n                    <Grid className={classes.gridItemCenter} item>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            {/* <InputLabel id=\"demo-simple-select-outlined-label\">نوع پیام</InputLabel> */}\n                            <TextField\n                                // labelId=\"demo-simple-select-outlined-label\"\n                                select\n                                id=\"demo-simple-select-outlined\"\n                                value={typeOfMessageState}\n                                onChange={handleChangeSelectType}\n                                variant=\"outlined\"\n                                size=\"small\"\n                                label=\"نوع پیام\"\n                            >\n                                <MenuItem value=\"usual\">عادی</MenuItem>\n                                <MenuItem value=\"homeWork\">تکلیف</MenuItem>\n                            </TextField>\n                        </FormControl>\n                    </Grid>\n                    {ChooseFile()}\n                    <Grid item xs/>\n                    <Grid className={classes.gridItemCenter} item>\n                        <Button \n                        className={classes.submitBtn} \n                        endIcon={<ArrowBackIos />}\n                        disableElevation \n                        color=\"primary\" \n                        variant=\"contained\" \n                        type=\"submit\"\n                    >\n                            ارسال\n                        </Button>\n                    </Grid>                        \n                </Grid>                    \n                <Grid container>\n                    {showAlert()}\n                </Grid>\n            </form>\n        </Card>\n    );\n};\n\nexport default SendMessage;","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ScrollToTopOnMount.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/UserCard.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/MessageList.tsx",["331"],"import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport MessageCard, { IMessageCardProps } from 'Scenes/components/MessageCard';\n\nconst useStyles = makeStyles((theme) => ({\n  messageItem: {\n    marginBottom: theme.spacing(2),\n  }\n}));\n\nconst MessageList = ({messages}: {messages: IMessageCardProps[]}) => {\n  const classes = useStyles();\n  return (\n    <>\n      {\n        messages.map(({message, userFullName, avatarUrl,\n           messageDate, attachedFiles, classRoomName, userAnswers,\n            user, classroom}) => (\n          <MessageCard\n            key={`${userFullName}-${messageDate}`}\n            className={classes.messageItem}\n            message={message}\n            userFullName={userFullName}\n            avatarUrl={avatarUrl}\n            messageDate={messageDate}\n            attachedFiles={attachedFiles}\n            classRoomName={classRoomName}\n            userAnswers={userAnswers}\n            user={user}\n            classroom={classroom}\n          />\n        ))\n      }\n    </>\n  );\n};\n\nexport default MessageList;","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/FilterSelection.tsx",["332"],"import { Card, Grid, InputAdornment, makeStyles, MenuItem, TextField, Typography } from '@material-ui/core';\nimport { FilterList } from '@material-ui/icons';\nimport { MessageFilters } from 'constants/constants';\nimport moment from 'moment-jalaali';\nimport React, { useEffect, useRef, useState } from 'react';\nimport useMessageFilter, { MessageFilterQuery } from 'services/hooks/useMessageFilter';\nimport Spacer from './Spacer';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  filterListItem: {\n    color: theme.palette.primary.dark,\n  }\n}));\n\nconst FilterSelection : React.FC<{ title: string }> = ({ title }) => {\n  const classes = useStyles();\n\n  const [filter, setFilter] = useMessageFilter();\n  const allFilters = Object.values(MessageFilters);\n  const [currentTime, setCurrentTime] = useState('');\n  const timerRef = useRef<number>();\n\n  useEffect(() => {\n    timerRef.current = window.setInterval(() => setCurrentTime(moment(new Date()).format('HH:mm:ss')), 1000);\n    return () => {\n      clearInterval(timerRef.current);\n    };\n  }, [setCurrentTime]);\n\n  // fix history issue\n  const handleFilterChange = (filterQuery: MessageFilterQuery) => {\n    setFilter(filterQuery);\n  };\n\n  return (\n    <Card elevation={0}>\n      <Grid container>\n        <Grid item xs>\n          <div className={classes.card}>\n            <Grid container>\n              <Grid item>\n                <Typography variant='h6'>{title}</Typography>\n              </Grid>\n              <Grid item xs />\n              <Grid item>\n                <Typography variant='h6'>{currentTime}</Typography>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n        <Spacer orientation=\"v\" spacing={2}/>\n        <Grid item xs={3}>\n          <TextField \n            value={filter.title}\n            size=\"small\" \n            variant=\"outlined\" \n            select \n            fullWidth\n            InputProps={{startAdornment: (\n              <InputAdornment position=\"start\">\n                <FilterList className={classes.filterListItem}/>\n              </InputAdornment>\n            )}}\n          >\n            {allFilters.map(({title: filterTitle, query: filterQuery}) => (\n              <MenuItem \n                key={filterQuery || 'ALL'} \n                value={filterTitle} \n                onClick={() => handleFilterChange(filterQuery)}\n              >\n                {filterTitle}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nexport default FilterSelection;\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/CollapseList.tsx",["333","334"],"import { Card, Collapse, ListItem, ListItemIcon, ListItemText, makeStyles } from '@material-ui/core';\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\nimport React, { ComponentType, ReactNode, useState } from 'react';\nimport { farsiNumbers } from 'services/utils/i18nUtils';\n\n\ninterface ICollapseListProps {\n  listTitle: string,\n  ListIcon?: ReactNode,\n  ListComponent: ComponentType,\n  listCount: number,\n}\n\nconst useStyles = makeStyles((theme) => ({\n  countBadge: {\n    display: 'inline',\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingLeft: theme.spacing(1),\n    borderRadius: 4,\n    backgroundColor: theme.palette.secondary.light,\n  },\n  darkPrimaryicon: {\n    color: theme.palette.primary.dark,\n  }\n}));\n\nconst CollapseList = ({listTitle, ListIcon, ListComponent, listCount}: ICollapseListProps) => {\n  const classes = useStyles();\n  \n  const [isCollapsed, setIsCollapsed] = useState(false);\n  return (\n    <Card elevation={0}>\n      <ListItem button onClick={() => setIsCollapsed((ps) => !ps)}>\n        <ListItemIcon className={classes.darkPrimaryicon}>{ListIcon}</ListItemIcon>\n        <ListItemText>\n          {listTitle}\n          <div className={classes.countBadge}>{farsiNumbers(listCount)}</div>\n        </ListItemText>\n        {isCollapsed ? <ExpandMore className={classes.darkPrimaryicon}/> : <ExpandLess className={classes.darkPrimaryicon}/>}\n      </ListItem>\n      {ListComponent && \n        <Collapse in={!isCollapsed}>\n          <ListComponent />\n        </Collapse>\n      }\n    </Card>\n  );\n};\n\nexport default CollapseList;","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/SessionsList.js",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ExamCard.js",[],["335","336","337"],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/Navbar.tsx",["338","339","340"],"import {\n  Avatar,\n  Button,\n  Grid,\n  IconButton,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Home } from \"@material-ui/icons\";\nimport React, { ReactElement, SyntheticEvent, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport BannerNav from \"Scenes/components/BannerNav\";\nimport ProfilePopover from \"../../components/ProfilePopover\";\n\ninterface ILink {\n  title: string;\n  path: string;\n  IconElement?: ReactElement;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  navbarBanner: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: theme.spacing(10),\n    backgroundColor: theme.palette.grey[\"300\"],\n  },\n  navbar: {\n    minHeight: theme.spacing(5),\n    padding: theme.spacing(0, 1),\n    backgroundColor: theme.palette.secondary.light,\n    position: \"sticky\",\n    top: 0,\n    zIndex: theme.zIndex.appBar,\n  },\n  linkContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatarContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  settingButtonContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n  },\n}));\n\nconst navbarLinks: ILink[] = [\n  { title: \"خانه\", path: \"/\", IconElement: <Home /> },\n  { title: \"گلستان\", path: \"https://golestan.ui.ac.ir/\" },\n  { title: \"آزمون\", path: \".\" },\n  { title: \"تغذیه\", path: \".\" },\n];\n\nconst Navbar = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const [\n    profilePopoverAnchor,\n    setProfilePopoverAnchor,\n  ] = useState<HTMLElement | null>(null);\n\n  const handleNavigateToLink = (path: string) => history.push('/');\n\n  const handleAvatarClick = (e: SyntheticEvent<HTMLElement>) => {\n    setProfilePopoverAnchor(e.currentTarget);\n  };\n\n  const renderLink = (link: ILink) => {\n    const IconElement = link.IconElement || null;\n    return (\n      <Grid className={classes.linkContainer} key={link.title} item>\n        <Button\n          disableElevation\n          size=\"large\"\n          variant=\"text\"\n          {...(IconElement && { startIcon: IconElement })}\n          onClick={() => handleNavigateToLink(link.path)}\n          color=\"primary\"\n        >\n          {link.title}\n        </Button>\n      </Grid>\n    );\n  };\n\n  const renderNavbarBannerImage = () => {\n    return <BannerNav />;\n  };\n  const renderNavbar = () => {\n    return (\n      <Grid className={classes.navbar} container>\n        {navbarLinks.map(renderLink)}\n\n        <Grid item xs />\n\n        <Grid className={classes.avatarContainer} item>\n          <IconButton onClick={handleAvatarClick}>\n            <Avatar className={classes.avatar} src=\"avatar\" />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      {renderNavbarBannerImage()}\n      {renderNavbar()}\n      <ProfilePopover\n        open={!!profilePopoverAnchor}\n        anchorEl={profilePopoverAnchor}\n        onClose={() => setProfilePopoverAnchor(null)}\n      />\n    </>\n  );\n};\n\nexport default Navbar;\n","/Users/sedali/Documents/MyProjects/felms/src/services/api/user/index.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/services/api/lesson/index.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ClassCard.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/services/api/main/index.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/services/navigation.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/constants/constants.ts",["341"],"import { IMessageFilter } from \"services/hooks/useMessageFilter\";\n\nexport const SearchQueryParams = {\n  messageFilter: 'message-filter',\n};\n\nexport const MessageFilters: Record<string, IMessageFilter> = {\n  all: {title: 'همه', query: undefined},\n  message: {title: 'پیام', query: 'message'},\n  assignment: {title: 'تکلیف', query: 'assignment'},\n};","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ProfilePopover.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/MessageCard.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/services/utils/i18nUtils.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/MessageListSkeleton.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/LessonListSkeleton.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ClassCardSkeleton.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/sessionFactory.ts",["342"],"import { sample } from 'lodash';\nimport { Factory, Server } from \"miragejs\";\n\nexport default Factory.extend({\n  title: (i: number) => [\"جلسه ۱\", \"جلسه 2\", \"جلسه ۴\", \"جلسه ۳\"][i % 4],\n  date: (i: number) =>\n    [\" ۵ آذر\", \" ۱۸ آذر\", \"۲۵ دی\", \" ۳۰ مهر\", \" ۱۵ آبان\"][i % 5],\n  time: (i: number) => [\"ساعت ۱۸:۰۰\", \"ساعت ۲۰:۰۰\", \"ساعت ۱۰:۰۰\"][i % 3],\n  status: (i: number) => [\"active\", \"recorded\", \"recording\" ][i % 3],\n  isToday : (i : number) => sample([true , false]),\n  afterCreate(session: any, server: Server) {\n    session.update({\n      classroom: session.classroom || server.create(\"classroom\"),\n    });\n  },\n});\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ExamCardMigrate.tsx",["343"],"import {\n  Avatar,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\n\ninterface IExamCardProps {\n  title: string;\n  date: string;\n  icon?: any;\n  time: string;\n  status: string;\n  //   primaryDesc?: string;\n  //   secondaryDesc?: string;\n}\n\n//   title: (i: number) => [\"آزمون ۱\", \"آزمون 2\", \"آزمون ۴\", \"آزمون ۳\"][i % 2],\n//   date: (i: number) =>\n//     [\" ۵ آذر\", \" ۱۸ آذر\", \"۲۵ دی\", \" ۳۰ مهر\", \" ۱۵ آبان\"][i % 2],\n//   time: (i: number) =>\n//     [\"۲۰ دقیقه\", \"۲۰ دقیقه\", \"۳۰ دقیقه\", \"۷۰ دقیقه\", \"۷۰ دقیقه\", \"۶۰ دقیقه\"][\n//       i % 2\n//     ],\n//   status: (i: number) => [\"شروع نشده\", \"شروع نشده\"][i % 2],\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\nexport const ExamCard = ({\n  title,\n  date,\n  icon: Icon,\n  time,\n  status,\n}: IExamCardProps) => {\n  const classes = useStyles();\n  const persianStatus = status === \"active\" ? \"شروع شده\" : \"شروع نشده\";\n  return (\n    <ListItem alignItems=\"flex-start\" button>\n      <ListItemIcon>\n        <Avatar classes={{ root: status === \"active\" ? classes.root : \"\" }}>\n          {/* <Icon /> */}\n          {Icon}\n        </Avatar>\n      </ListItemIcon>\n      <ListItemText\n        primary={title}\n        secondary={\n          <>\n            <Typography variant=\"body1\">{date + \" \" + time}</Typography>\n            <Typography variant=\"body2\">{persianStatus}</Typography>\n            {/* <Typography variant=\"caption\">{status}</Typography> */}\n            {/* <Typography variant=\"caption\">{status}</Typography> */}\n          </>\n        }\n      />\n    </ListItem>\n  );\n};\nexport default ExamCard;\n","/Users/sedali/Documents/MyProjects/felms/src/services/Contexts/UserContext/UserProvider.tsx",["344"],"import React, { useReducer } from \"react\";\nimport { initial, userContext, userDispatchContext } from \".\";\nimport { userReducer } from \"./UserReducer\";\n\nconst UserProvider: React.FC = ({ children }) => {\n  const [user, dispatchUser] = useReducer(userReducer, initial);\n  console.log('provider')\n\n  //fetch user data\n  // develop use effect \n  return (\n    <userContext.Provider value={user}>\n      <userDispatchContext.Provider value={dispatchUser}>\n        {children}\n      </userDispatchContext.Provider>\n    </userContext.Provider>\n  );\n};\n\nexport default UserProvider;\n","/Users/sedali/Documents/MyProjects/felms/src/services/Contexts/UserContext/UserReducer.ts",["345","346","347"],"import React from \"react\";\nimport { AppActions } from \"../AppActions\";\nimport { EUserActionTypes, IUserState } from \"./models\";\nexport const userReducer: React.Reducer<IUserState, AppActions> = (\n  userState,\n  action\n) => {\n  switch (action.type) {\n    case EUserActionTypes.LOGIN:\n      console.log(\"in login\", action.payload);\n      return { ...action.payload, isAuth: true };\n    case EUserActionTypes.LOGOUT:\n      return { isAuth: false } as IUserState;\n    default:\n      console.log(\"in login\");\n\n      return { ...userState };\n  }\n};\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LoginPage/index.tsx",["348","349","350"],"import {\n  Button,\n  Grid,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useUserDispatch, useUserState } from \"services/Contexts/UserContext\";\nimport { EUserActionTypes } from \"services/Contexts/UserContext/models\";\nimport BannerNav from \"../components/BannerNav\";\n\n// server.schema.create(\"user\", {\n//   fullName: \"صادق فرامرزی\",\n//   idNumber: \"963613051\",\n//   avatarUrl: `https://i.pravatar.cc/150?u=${963613051}`,\n//   role :'student'\n// }) as any;\n// server.schema.create(\"user\", {\n//   fullName: \"بابک مرادی\",\n//   idNumber: \"1213141516\",\n//   avatarUrl: `https://i.pravatar.cc/150?u=${1213141516}`,\n//   role : 'professor'\n// }) as any;\nconst fakeUsers = [\n  {\n    username: \"963613051\",\n    password: 1,\n  },\n  {\n    username: \"123456789\",\n    password: 1,\n  },\n];\n\nlet useStyles = makeStyles((theme) => ({\n  loginForm: {\n    justifyContent: \"center\",\n    minHeight: \"90vh\",\n    width: window.innerWidth > 500 ? 500 : 300,\n    maxWidth: 700,\n  },\n  buttonBlock: {\n    width: \"100%\",\n  },\n  loginBackground: {\n    justifyContent: \"center\",\n    minHeight: \"30vh\",\n    padding: \"50px\",\n  },\n}));\n\nexport const wait = (ms: number) => new Promise((res) => setTimeout(res, ms));\n\n// id : number ;\n// username: string;\n// fullName?: string,\n// idNumber?: string,\n// avatarUrl?: string,\n// isAuth: boolean;\n// role: keyof IRules;\nfunction Login() {\n  let username: string, password: string;\n  const classes = useStyles();\n  const userDispatch = useUserDispatch();\n  const user = useUserState();\n  console.log(user);\n\n  const handleChange = (event: any) => {\n    if (event.target.name == \"username\") username = event.target.value;\n    else password = event.target.value;\n  };\n\n  let history = useHistory();\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n\n    const canLogin = fakeUsers.some(\n      (f) =>\n        Number(f.username) === Number(username) &&\n        Number(f.password) === Number(password)\n    );\n    console.log(canLogin);\n    if (canLogin) {\n      userDispatch({\n        type: EUserActionTypes.LOGIN,\n        payload: {\n          id: Math.random(),\n          role: username === \"963613051\" ? \"student\" : \"professor\",\n          isAuth: true,\n          username: username,\n          idNumber: username,\n          avatarUrl: `https://i.pravatar.cc/150?u=${username}`,\n          fullName: username === \"963613051\" ? \"صادق فرامرزی\" : \"بابک مرادی\",\n        },\n      });\n      await wait(500);\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <div>\n      <BannerNav />\n      <Grid container justify=\"center\" direction=\"row\">\n        <Grid item>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            spacing={2}\n            className={classes.loginForm}\n          >\n            <Paper\n              variant=\"elevation\"\n              elevation={2}\n              className={classes.loginBackground}\n            >\n              <Grid item>\n                <Typography component=\"h1\" variant=\"h5\">\n                  ورود\n                </Typography>\n              </Grid>\n              <Grid item>\n                <form onSubmit={handleSubmit}>\n                  <Grid container direction=\"column\" spacing={2}>\n                    <Grid item>\n                      <TextField\n                        type=\"text\"\n                        placeholder=\"شماره دانشجویی\"\n                        fullWidth\n                        name=\"username\"\n                        variant=\"outlined\"\n                        // value={username}\n                        onChange={(event) => {\n                          handleChange(event);\n                        }}\n                        required\n                        autoFocus\n                      />\n                    </Grid>\n                    <Grid item>\n                      <TextField\n                        type=\"password\"\n                        placeholder=\"رمز عبور\"\n                        fullWidth\n                        name=\"password\"\n                        variant=\"outlined\"\n                        // value={password}\n                        onChange={(event) => {\n                          handleChange(event);\n                        }}\n                        required\n                      />\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        type=\"submit\"\n                        className={classes.buttonBlock}\n                      >\n                        ورود\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </form>\n              </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nexport default Login;\n",{"ruleId":"351","replacedBy":"352"},{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","severity":1,"message":"358","line":90,"column":15,"nodeType":"359","messageId":"360","endLine":90,"endColumn":21},{"ruleId":"357","severity":1,"message":"361","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":22},{"ruleId":"357","severity":1,"message":"362","line":1,"column":19,"nodeType":"359","messageId":"360","endLine":1,"endColumn":25},{"ruleId":"357","severity":1,"message":"363","line":1,"column":10,"nodeType":"359","messageId":"360","endLine":1,"endColumn":16},{"ruleId":"364","severity":1,"message":"365","line":17,"column":21,"nodeType":"366","messageId":"367","endLine":18,"endColumn":1,"fix":"368"},{"ruleId":"357","severity":1,"message":"362","line":2,"column":19,"nodeType":"359","messageId":"360","endLine":2,"endColumn":25},{"ruleId":"357","severity":1,"message":"369","line":2,"column":27,"nodeType":"359","messageId":"360","endLine":2,"endColumn":37},{"ruleId":"357","severity":1,"message":"370","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":16},{"ruleId":"351","replacedBy":"352"},{"ruleId":"353","replacedBy":"354"},{"ruleId":"355","replacedBy":"371"},{"ruleId":"364","severity":1,"message":"365","line":1,"column":26,"nodeType":"372","messageId":"367","endLine":2,"endColumn":1,"fix":"373"},{"ruleId":"364","severity":1,"message":"365","line":8,"column":6,"nodeType":"366","messageId":"367","endLine":9,"endColumn":1,"fix":"374"},{"ruleId":"364","severity":1,"message":"365","line":9,"column":2,"nodeType":"375","messageId":"367","endLine":10,"endColumn":1,"fix":"376"},{"ruleId":"364","severity":1,"message":"365","line":11,"column":21,"nodeType":"377","messageId":"367","endLine":12,"endColumn":1,"fix":"378"},{"ruleId":"379","severity":1,"message":"380","line":9,"column":3,"nodeType":"359","messageId":"360","endLine":9,"endColumn":18},{"ruleId":"379","severity":1,"message":"381","line":10,"column":3,"nodeType":"359","messageId":"360","endLine":10,"endColumn":14},{"ruleId":"357","severity":1,"message":"382","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":27},{"ruleId":"379","severity":1,"message":"383","line":102,"column":7,"nodeType":"359","messageId":"360","endLine":102,"endColumn":17},{"ruleId":"357","severity":1,"message":"384","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":18},{"ruleId":"357","severity":1,"message":"385","line":19,"column":7,"nodeType":"359","messageId":"360","endLine":19,"endColumn":19},{"ruleId":"364","severity":1,"message":"365","line":30,"column":26,"nodeType":"386","messageId":"367","endLine":31,"endColumn":1,"fix":"387"},{"ruleId":"357","severity":1,"message":"382","line":14,"column":10,"nodeType":"359","messageId":"360","endLine":14,"endColumn":27},{"ruleId":"357","severity":1,"message":"362","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":16},{"ruleId":"364","severity":1,"message":"365","line":2,"column":52,"nodeType":"372","messageId":"367","endLine":3,"endColumn":1,"fix":"388"},{"ruleId":"357","severity":1,"message":"389","line":1,"column":25,"nodeType":"359","messageId":"360","endLine":1,"endColumn":33},{"ruleId":"357","severity":1,"message":"390","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":20},{"ruleId":"357","severity":1,"message":"391","line":3,"column":10,"nodeType":"359","messageId":"360","endLine":3,"endColumn":20},{"ruleId":"392","severity":1,"message":"393","line":16,"column":9,"nodeType":"394","messageId":"395","endLine":16,"endColumn":11},{"ruleId":"357","severity":1,"message":"396","line":2,"column":17,"nodeType":"359","messageId":"360","endLine":2,"endColumn":30},{"ruleId":"357","severity":1,"message":"397","line":1,"column":10,"nodeType":"359","messageId":"360","endLine":1,"endColumn":16},{"ruleId":"379","severity":1,"message":"398","line":2,"column":8,"nodeType":"359","messageId":"360","endLine":2,"endColumn":17},{"ruleId":"379","severity":1,"message":"399","line":3,"column":8,"nodeType":"359","messageId":"360","endLine":3,"endColumn":14},{"ruleId":"379","severity":1,"message":"400","line":6,"column":10,"nodeType":"359","messageId":"360","endLine":6,"endColumn":24},{"ruleId":"379","severity":1,"message":"401","line":6,"column":26,"nodeType":"359","messageId":"360","endLine":6,"endColumn":36},{"ruleId":"379","severity":1,"message":"402","line":34,"column":7,"nodeType":"359","messageId":"360","endLine":34,"endColumn":18},{"ruleId":"357","severity":1,"message":"403","line":1,"column":10,"nodeType":"359","messageId":"360","endLine":1,"endColumn":23},{"ruleId":"357","severity":1,"message":"404","line":4,"column":10,"nodeType":"359","messageId":"360","endLine":4,"endColumn":31},{"ruleId":"405","severity":1,"message":"406","line":26,"column":7,"nodeType":"407","messageId":"408","fix":"409"},{"ruleId":"357","severity":1,"message":"410","line":4,"column":36,"nodeType":"359","messageId":"360","endLine":4,"endColumn":41},{"ruleId":"357","severity":1,"message":"382","line":3,"column":23,"nodeType":"359","messageId":"360","endLine":3,"endColumn":40},{"ruleId":"357","severity":1,"message":"411","line":6,"column":28,"nodeType":"359","messageId":"360","endLine":6,"endColumn":46},{"ruleId":"357","severity":1,"message":"396","line":3,"column":17,"nodeType":"359","messageId":"360","endLine":3,"endColumn":30},{"ruleId":"357","severity":1,"message":"412","line":3,"column":32,"nodeType":"359","messageId":"360","endLine":3,"endColumn":41},{"ruleId":"351","replacedBy":"413"},{"ruleId":"353","replacedBy":"414"},{"ruleId":"355","replacedBy":"415"},{"ruleId":"357","severity":1,"message":"416","line":9,"column":17,"nodeType":"359","messageId":"360","endLine":9,"endColumn":29},{"ruleId":"357","severity":1,"message":"417","line":9,"column":31,"nodeType":"359","messageId":"360","endLine":9,"endColumn":45},{"ruleId":"364","severity":1,"message":"365","line":64,"column":30,"nodeType":"375","messageId":"367","endLine":65,"endColumn":1,"fix":"418"},{"ruleId":"357","severity":1,"message":"419","line":1,"column":10,"nodeType":"359","messageId":"360","endLine":1,"endColumn":24},{"ruleId":"357","severity":1,"message":"362","line":2,"column":19,"nodeType":"359","messageId":"360","endLine":2,"endColumn":25},{"ruleId":"420","severity":1,"message":"421","line":55,"column":42,"nodeType":"422","messageId":"423","endLine":55,"endColumn":59,"fix":"424"},{"ruleId":"364","severity":1,"message":"365","line":7,"column":26,"nodeType":"386","messageId":"367","endLine":8,"endColumn":1,"fix":"425"},{"ruleId":"357","severity":1,"message":"426","line":1,"column":8,"nodeType":"359","messageId":"360","endLine":1,"endColumn":13},{"ruleId":"357","severity":1,"message":"390","line":2,"column":10,"nodeType":"359","messageId":"360","endLine":2,"endColumn":20},{"ruleId":"357","severity":1,"message":"391","line":3,"column":28,"nodeType":"359","messageId":"360","endLine":3,"endColumn":38},{"ruleId":"405","severity":1,"message":"406","line":72,"column":5,"nodeType":"407","messageId":"408","fix":"427"},{"ruleId":"428","severity":1,"message":"429","line":72,"column":27,"nodeType":"422","messageId":"395","endLine":72,"endColumn":29},{"ruleId":"405","severity":1,"message":"430","line":73,"column":5,"nodeType":"407","messageId":"431","fix":"432"},"no-native-reassign",["433"],"no-negated-in-lhs",["434"],"jsx-a11y/accessible-emoji",[],"@typescript-eslint/no-unused-vars","'userId' is assigned a value but never used.","Identifier","unusedVar","'TPermissions' is defined but never used.","'Server' is defined but never used.","'random' is defined but never used.","semi","Missing semicolon.","ReturnStatement","missingSemi",{"range":"435","text":"436"},"'RouteProps' is defined but never used.","'IRoute' is defined but never used.",[],"ImportDeclaration",{"range":"437","text":"436"},{"range":"438","text":"436"},"VariableDeclaration",{"range":"439","text":"436"},"ExportDefaultDeclaration",{"range":"440","text":"436"},"no-unused-vars","'sessionsFetcher' is defined but never used.","'sessionsKey' is defined but never used.","'IMessageCardProps' is defined but never used.","'mockedData' is assigned a value but never used.","'ISession' is defined but never used.","'sessionsMock' is assigned a value but never used.","ExpressionStatement",{"range":"441","text":"436"},{"range":"442","text":"436"},"'Dispatch' is defined but never used.","'AppActions' is defined but never used.","'IUserState' is defined but never used.","no-empty-function","Unexpected empty arrow function.","ArrowFunctionExpression","unexpected","'ComponentType' is defined but never used.","'IRules' is defined but never used.","'PropTypes' is defined but never used.","'useSWR' is defined but never used.","'lessonsFetcher' is defined but never used.","'lessonsKey' is defined but never used.","'lessonsMock' is assigned a value but never used.","'AxiosInstance' is defined but never used.","'IRefreshTokenResponse' is defined but never used.","curly","Expected { after 'if' condition.","IfStatement","missingCurlyAfterCondition",{"range":"443","text":"444"},"'Theme' is defined but never used.","'MessageFilterQuery' is defined but never used.","'ReactNode' is defined but never used.",["433"],["434"],[],"'ReactElement' is defined but never used.","'SyntheticEvent' is defined but never used.",{"range":"445","text":"436"},"'IMessageFilter' is defined but never used.","prefer-template","Unexpected string concatenation.","BinaryExpression","unexpectedStringConcatenation",{"range":"446","text":"447"},{"range":"448","text":"436"},"'React' is defined but never used.",{"range":"449","text":"450"},"eqeqeq","Expected '===' and instead saw '=='.","Expected { after 'else'.","missingCurlyAfter",{"range":"451","text":"452"},"no-global-assign","no-unsafe-negation",[400,400],";",[25,25],[129,129],[131,131],[153,153],[867,867],[78,78],[853,873],"{isProfileReq = true;}",[1550,1550],[1360,1377],"`${date  } ${  time}`",[293,293],[1715,1745],"{username = event.target.value;}",[1755,1785],"{password = event.target.value;}"]