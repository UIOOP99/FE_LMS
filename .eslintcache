[{"/Users/sedali/Documents/MyProjects/felms/src/index.tsx":"1","/Users/sedali/Documents/MyProjects/felms/src/constants/theme.ts":"2","/Users/sedali/Documents/MyProjects/felms/src/Scenes/App.tsx":"3","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/RTLProvider.tsx":"4","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/index.ts":"5","/Users/sedali/Documents/MyProjects/felms/src/Scenes/routes.tsx":"6","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/Loading.tsx":"7","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/messageFactory.ts":"8","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/classroomFactory.ts":"9","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/examFactory.ts":"10","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/userFactory.ts":"11","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/PrivateRoute.tsx":"12","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/scenarios/index.ts":"13","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LoginPage/index.js":"14","/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/index.tsx":"15","/Users/sedali/Documents/MyProjects/felms/src/Scenes/TestPage/index.tsx":"16","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/index.tsx":"17","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/scenarios/basicScenario.ts":"18","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/BannerNav.tsx":"19","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/components/LessonLeftSidebar.tsx":"20","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/components/LessonCenterSection.tsx":"21","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/components/LessonRightSidebar.tsx":"22","/Users/sedali/Documents/MyProjects/felms/src/services/LocalStorage/localStorage.ts":"23","/Users/sedali/Documents/MyProjects/felms/src/services/axios/axios.ts":"24","/Users/sedali/Documents/MyProjects/felms/src/services/Contexts/UserContext/index.ts":"25","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/BaseLayout.tsx":"26","/Users/sedali/Documents/MyProjects/felms/src/services/axios/axiosInterceptor.ts":"27","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/Spacer.tsx":"28","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/CollapseList.tsx":"29","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/UserCard.tsx":"30","/Users/sedali/Documents/MyProjects/felms/src/services/hooks/useMessageFilter.ts":"31","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ScrollToTopOnMount.tsx":"32","/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/HomeLeftSidebar.tsx":"33","/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/HomeRightSidebar.tsx":"34","/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/HomeCenterSection.tsx":"35","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ExamCard.js":"36","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/MessageList.tsx":"37","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/FilterSelection.tsx":"38","/Users/sedali/Documents/MyProjects/felms/src/services/api/lesson/index.ts":"39","/Users/sedali/Documents/MyProjects/felms/src/services/Contexts/UserContext/models.ts":"40","/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/Navbar.tsx":"41","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ClassCard.tsx":"42","/Users/sedali/Documents/MyProjects/felms/src/services/navigation.ts":"43","/Users/sedali/Documents/MyProjects/felms/src/constants/constants.ts":"44","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ProfilePopover.tsx":"45","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/MessageCard.tsx":"46","/Users/sedali/Documents/MyProjects/felms/src/services/api/main/index.ts":"47","/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/index.js":"48","/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/components/ProfileRightSidebar.js":"49","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/LessonsList.js":"50","/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/components/EmptySide.js":"51","/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/components/ProfileCard.js":"52","/Users/sedali/Documents/MyProjects/felms/src/services/api/user/index.ts":"53","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/MessageListSkeleton.tsx":"54","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/MessageCardSkeleton.tsx":"55","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/LessonListSkeleton.tsx":"56","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ClassCardSkeleton.tsx":"57","/Users/sedali/Documents/MyProjects/felms/src/services/utils/i18nUtils.ts":"58","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/SendMessage.tsx":"59"},{"size":845,"mtime":1611431710107,"results":"60","hashOfConfig":"61"},{"size":789,"mtime":1611431710106,"results":"62","hashOfConfig":"61"},{"size":829,"mtime":1611431710100,"results":"63","hashOfConfig":"61"},{"size":375,"mtime":1608810750294,"results":"64","hashOfConfig":"61"},{"size":2326,"mtime":1611519890363,"results":"65","hashOfConfig":"61"},{"size":1763,"mtime":1611431032020,"results":"66","hashOfConfig":"61"},{"size":464,"mtime":1611431710105,"results":"67","hashOfConfig":"61"},{"size":2730,"mtime":1611431710109,"results":"68","hashOfConfig":"61"},{"size":834,"mtime":1611440712795,"results":"69","hashOfConfig":"61"},{"size":547,"mtime":1611249070400,"results":"70","hashOfConfig":"61"},{"size":482,"mtime":1611439160345,"results":"71","hashOfConfig":"61"},{"size":1251,"mtime":1608810750293,"results":"72","hashOfConfig":"61"},{"size":89,"mtime":1611249070402,"results":"73","hashOfConfig":"61"},{"size":3790,"mtime":1608824032825,"results":"74","hashOfConfig":"61"},{"size":887,"mtime":1611249070393,"results":"75","hashOfConfig":"61"},{"size":154,"mtime":1608810750292,"results":"76","hashOfConfig":"61"},{"size":504,"mtime":1608810913959,"results":"77","hashOfConfig":"61"},{"size":542,"mtime":1611440835044,"results":"78","hashOfConfig":"61"},{"size":567,"mtime":1608815373724,"results":"79","hashOfConfig":"61"},{"size":1473,"mtime":1611249070390,"results":"80","hashOfConfig":"61"},{"size":1553,"mtime":1611520095536,"results":"81","hashOfConfig":"61"},{"size":1238,"mtime":1611249070390,"results":"82","hashOfConfig":"61"},{"size":1709,"mtime":1608815373728,"results":"83","hashOfConfig":"61"},{"size":313,"mtime":1608811433834,"results":"84","hashOfConfig":"61"},{"size":597,"mtime":1611251536749,"results":"85","hashOfConfig":"61"},{"size":923,"mtime":1608810913962,"results":"86","hashOfConfig":"61"},{"size":2163,"mtime":1608810750413,"results":"87","hashOfConfig":"61"},{"size":358,"mtime":1608810913964,"results":"88","hashOfConfig":"61"},{"size":1624,"mtime":1611431710104,"results":"89","hashOfConfig":"61"},{"size":1632,"mtime":1611431032019,"results":"90","hashOfConfig":"61"},{"size":636,"mtime":1608810913969,"results":"91","hashOfConfig":"61"},{"size":178,"mtime":1611249070396,"results":"92","hashOfConfig":"61"},{"size":419,"mtime":1608810913960,"results":"93","hashOfConfig":"61"},{"size":533,"mtime":1611438766392,"results":"94","hashOfConfig":"61"},{"size":1557,"mtime":1611520121486,"results":"95","hashOfConfig":"61"},{"size":2656,"mtime":1608810913963,"results":"96","hashOfConfig":"61"},{"size":1065,"mtime":1611421337430,"results":"97","hashOfConfig":"61"},{"size":2682,"mtime":1611431710104,"results":"98","hashOfConfig":"61"},{"size":1236,"mtime":1611431710108,"results":"99","hashOfConfig":"61"},{"size":501,"mtime":1611421337432,"results":"100","hashOfConfig":"61"},{"size":3039,"mtime":1611431710102,"results":"101","hashOfConfig":"61"},{"size":750,"mtime":1611431032015,"results":"102","hashOfConfig":"61"},{"size":213,"mtime":1608810750414,"results":"103","hashOfConfig":"61"},{"size":359,"mtime":1608810913965,"results":"104","hashOfConfig":"61"},{"size":2598,"mtime":1611431710106,"results":"105","hashOfConfig":"61"},{"size":5698,"mtime":1611431710105,"results":"106","hashOfConfig":"61"},{"size":550,"mtime":1611249070399,"results":"107","hashOfConfig":"61"},{"size":457,"mtime":1611431032014,"results":"108","hashOfConfig":"61"},{"size":307,"mtime":1611431032013,"results":"109","hashOfConfig":"61"},{"size":1040,"mtime":1611431032016,"results":"110","hashOfConfig":"61"},{"size":92,"mtime":1611431032011,"results":"111","hashOfConfig":"61"},{"size":2381,"mtime":1611431032012,"results":"112","hashOfConfig":"61"},{"size":538,"mtime":1611438697404,"results":"113","hashOfConfig":"61"},{"size":2992,"mtime":1611431067452,"results":"114","hashOfConfig":"61"},{"size":573,"mtime":1611431067452,"results":"115","hashOfConfig":"61"},{"size":380,"mtime":1611431067451,"results":"116","hashOfConfig":"61"},{"size":882,"mtime":1611431067451,"results":"117","hashOfConfig":"61"},{"size":340,"mtime":1611431710110,"results":"118","hashOfConfig":"61"},{"size":14055,"mtime":1611520112319,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1gvg4x9",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"127","usedDeprecatedRules":"122"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"122"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"122"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"122"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":12,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"161","usedDeprecatedRules":"122"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"122"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"180","usedDeprecatedRules":"122"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"189","usedDeprecatedRules":"122"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"122"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"205","usedDeprecatedRules":"122"},{"filePath":"206","messages":"207","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"122"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"122"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"122"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"156"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"156"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"252","usedDeprecatedRules":"122"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"122"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"122"},"/Users/sedali/Documents/MyProjects/felms/src/index.tsx",[],["268","269","270"],"/Users/sedali/Documents/MyProjects/felms/src/constants/theme.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/App.tsx",["271"],"import axios from \"axios\";\nimport React, { Suspense } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { SWRConfig } from \"swr\";\nimport { Loading } from \"./components/Loading\";\nimport routes, { renderRoutes } from \"./routes\";\n\nconst App = () => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <SWRConfig\n        value={{\n          fetcher: (url) => axios.get(\"/api\" + url).then((r) => r.data),\n        }}\n      >\n        <Switch>{renderRoutes(routes)}</Switch>\n      </SWRConfig>\n    </Suspense>\n  );\n};\n\nexport default App;\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/RTLProvider.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/services/mirage/index.ts",["272","273"],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/routes.tsx",["274"],"import React, { lazy } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { TPermissions } from \"services/role/model\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nconst LessonPage = lazy(() => import(\"./LessonPage\"));\nconst TestPage = lazy(() => import(\"./TestPage\"));\nconst MainPage = lazy(() => import(\"./MainPage\"));\nconst LoginPage = lazy(() => import(\"./LoginPage\"));\nconst ProfilePage = lazy(() => import(\"./ProfilePage\"));\n\nexport interface IRoute {\n  path?: string | string[];\n  component: React.FC<any>;\n  exact?: boolean;\n  routes?: IRoute[];\n  private?: boolean;\n  notHaveBaseLayout?: boolean;\n  toHavePermissions?: TPermissions[];\n}\n\nconst routes: IRoute[] = [\n  {\n    path: \"/\",\n    component: MainPage,\n    exact: true,\n  },\n  {\n    path: \"/lesson/:id\",\n    component: LessonPage,\n  },\n  {\n    path: \"/test\",\n    component: TestPage,\n  },\n  {\n    path: \"/login\",\n    component: LoginPage,\n  },\n  {\n    path: \"/profile/:id\",\n    component: ProfilePage,\n  },\n];\n\nexport const renderRoutes = (routes: IRoute[]) => {\n  return routes.map((route, key) => {\n    if (route.private) {\n      return <PrivateRoute {...route} key={key} />;\n    } else {\n      return (\n        <Route\n          key={key}\n          {...route}\n          component={undefined}\n          render={(props) => {\n            if (route.notHaveBaseLayout) {\n              return (\n                <route.component {...props} routes={route.routes} key={key} />\n              );\n            } else {\n              return (\n                // <BaseLayout>\n                <route.component {...props} routes={route.routes} key={key} />\n                // </BaseLayout>\n              );\n            }\n          }}\n        />\n      );\n    }\n  });\n};\nexport default routes;\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/Loading.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/messageFactory.ts",["275"],"import { random, range, sample } from \"lodash\";\nimport { Factory, Server } from \"miragejs\";\n\nexport default Factory.extend({\n  userFullName: () => sample([\n    \"امیرمحمد چراغی\",\n    \"سیدعلی سجادی\",\n    \"امیررضا اسماعیلی\",\n    \"امیرمهدی سلیمانی\",\n    \"سجاد یزدان پرست\",\n  ]),\n  classRoomName: () => sample([\n    \"کلاس طراحي شي گراي سيستم ها-01\",\n    \"کلاس اقتصاد مهندسي-01\",\n    \"کلاس مهندسي اينترنت-01\",\n    \"کلاس آزمايشگاه شبكه هاي كامپيوتري-06\",\n  ]),\n  message: () => {\n    return 'لورم ایپسوم متن ساختگی با تولید سادگی نامفهوم از صنعت چاپ و با استفاده از طراحان گرافیک است. چاپگرها و متون بلکه روزنامه و مجله در ستون و سطرآنچنان که لازم است و برای شرایط فعلی تکنولوژی مورد نیاز و کاربردهای متنوع با هدف بهبود ابزارهای کاربردی می باشد. کتابهای زیادی در شصت و سه درصد گذشته، حال و آینده شناخت فراوان جامعه و متخصصان را می طلبد تا با نرم افزارها شناخت بیشتری را برای طراحان رایانه ای علی الخصوص طراحان خلاقی و فرهنگ پیشرو در زبان فارسی ایجاد کرد. در این صورت می توان امید داشت که تمام و دشواری موجود در ارائه راهکارها و شرایط سخت تایپ به پایان رسد وزمان مورد نیاز شامل حروفچینی دستاوردهای اصلی و جوابگوی سوالات پیوسته اهل دنیای موجود طراحی اساسا مورد استفاده قرار گیرد.';\n  },\n  messageDate: () => new Date(2020, Math.random() * 11, Math.random() * 29),\n  messageType: () => sample(['message', 'assignment']),\n  attachedFiles: () => {\n    const count = random(10);\n    return range(count).map((i) => ({ fileName: `file_${i}.pdf`, fileUrl: 'url'}));\n  },\n  userAnswers: () => {\n    const count = random(10);\n    return range(count).map((i) => ({\n      userFullName: sample([\n        \"امیرمحمد چراغی\",\n        \"سیدعلی سجادی\",\n        \"امیررضا اسماعیلی\",\n        \"امیرمهدی سلیمانی\",\n        \"سجاد یزدان پرست\",\n      ]),\n       answer: `جواب سوال ${i}`\n    }));\n  },\n  afterCreate(message: any, server: Server) {\n    message.update({\n      user: server.create('user'),\n      classroom: message.classroom || server.create('classroom'),\n    });\n  }\n});","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/classroomFactory.ts",["276","277"],"import { random } from \"lodash\";\nimport { Factory, Server } from \"miragejs\";\n\nexport default Factory.extend({\n  name: (i: number) => ([\n    \"کلاس طراحي شي گراي سيستم ها-۰۱\",\n    \"کلاس اقتصاد مهندسي-۰۱\",\n    \"کلاس مهندسي اينترنت-۰۱\",\n    \"کلاس آزمايشگاه شبكه هاي كامپيوتري-۰۶\",\n    \"کلاس اصول طراحی کامپایلر\",\n    \"کلاس طراحی سیستم‌های دیجیتال\",\n    \"کلاس روش پژوهش و ارائه\",\n    \"کلاس ریزپردازنده\",\n    \"کلاس آیین زندگی\",\n    \"کلاس آزمایشگاه پایگاه داده\"\n  ][i % 10]),\n  // afterCreate(classroom: any, server: Server) {\n  //   classroom.update({\n  //     members: server.createList('user', random(1, 20))\n  //   });\n  // }\n});","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/examFactory.ts",["278"],"import { Factory, Server } from \"miragejs\";\n\nexport default Factory.extend({\n  title: (i: number) => ([\n    'آزمون ۱',\n    'آزمون 2',\n  ][i % 2]),\n  date: (i: number) => ([\n    ' ۵ آذر',\n    ' 6 آذر',\n  ][i % 2]),\n  time: (i: number) => ([\n    '۲۰ دقیقه',\n    '۲۰ دقیقه',\n  ][i % 2]),\n  status: (i: number) => ([\n    'شروع نشده',\n    'شروع نشده',\n  ][i % 2]),\n  afterCreate(exam: any, server: Server) {\n    exam.update({\n      classroom: exam.classroom || server.create('classroom'),\n    });\n  }\n});","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/factories/userFactory.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/PrivateRoute.tsx",["279","280"],"import React from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\nimport { IRoute } from \"Scenes/routes\";\nimport { useUserState } from \"services/Contexts/UserContext\";\n\nconst PrivateRoute: React.FC<RouteProps & { component: any } & IRoute> = ({\n  component: Component,\n  ...rest\n}) => {\n  //   const { toHavePermissions } = rest;\n  const user = useUserState();\n\n  // const userPermissions = rules[user.rule].static;\n  // console.log(userPermissions);\n\n  // const canRender = toHavePermissions?.some((item) => {\n  //   return userPermissions.some((perm) => item === perm);\n  // });\n  //   const canRender = check(user , toHavePermissions)\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        return (\n          <>\n            {user.isAuth ? (\n              <Component routes={rest.routes} {...props} />\n            ) : (\n              <>\n                {/* {toast.error(\"برای ادامه وارد شوید\")} */}\n                <Redirect\n                  to={{\n                    pathname: \"/\",\n                    state: { from: props.location },\n                  }}\n                />\n              </>\n            )}\n          </>\n        );\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n","/Users/sedali/Documents/MyProjects/felms/src/services/mirage/scenarios/index.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/LoginPage/index.js",["281","282","283","284","285","286","287","288","289","290","291","292","293","294"],"import React from \"react\";\nimport {\n  Button,\n  TextField,\n  Grid,\n  Paper,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\n\nimport { axiosInstance } from \"services/axios/axios\";\nimport { createTokenObj, LSService } from \"services/LocalStorage/localStorage\";\nimport { useHistory } from \"react-router-dom\";\nimport BannerNav from \"../components/BannerNav\"\n\nlet useStyles = makeStyles((theme) => ({\n  loginForm: {\n    justifyContent: \"center\",\n    minHeight: \"90vh\",\n    width: window.innerWidth > 500 ? 500 : 300,\n    maxWidth: 700,\n  },\n  buttonBlock: {\n    width: \"100%\",\n  },\n  loginBackground: {\n    justifyContent: \"center\",\n    minHeight: \"30vh\",\n    padding: \"50px\",\n  },\n}));\n\nfunction Login() {\n  let username, password;\n  let width;\n  const classes = useStyles();\n\n  const handleChange = (event) => {\n    if (event.target.name == \"username\") username = event.target.value;\n    else password = event.target.value;\n  };\n\n  let history = useHistory()\n  const handleSubmit = (event) => {\n    event.preventDefault();\n   \n    console.log(username);\n    console.log(password);\n\n    const data = {\n        username : username ,\n        password : password\n    }\n    axiosInstance.post(\"/login\",data).then(res =>{\n        LSService.setToken(createTokenObj(res.refresh.token, res.access.token))\n        history.push(\"/\")\n\n    })\n    .catch(err =>{\n        alert(err)\n        console.log(err)\n    })\n\n  \n  };\n\n  return (\n    <div>\n      <BannerNav />\n      <Grid container justify=\"center\" direction=\"row\">\n        <Grid item>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            spacing={2}\n            className={classes.loginForm}\n          >\n            <Paper\n              variant=\"elevation\"\n              elevation={2}\n              className={classes.loginBackground}\n            >\n              <Grid item>\n                <Typography component=\"h1\" variant=\"h5\">\n                  ورود\n                </Typography>\n              </Grid>\n              <Grid item>\n                <form onSubmit={handleSubmit}>\n                  <Grid container direction=\"column\" spacing={2}>\n                    <Grid item>\n                      <TextField\n                        type=\"text\"\n                        placeholder=\"شماره دانشجویی\"\n                        fullWidth\n                        name=\"username\"\n                        variant=\"outlined\"\n                        // value={username}\n                        onChange={(event) => {\n                          handleChange(event);\n                        }}\n                        required\n                        autoFocus\n                      />\n                    </Grid>\n                    <Grid item>\n                      <TextField\n                        type=\"password\"\n                        placeholder=\"رمز عبور\"\n                        fullWidth\n                        name=\"password\"\n                        variant=\"outlined\"\n                        // value={password}\n                        onChange={(event) => {\n                          handleChange(event);\n                        }}\n                        required\n                      />\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        type=\"submit\"\n                        className={classes.buttonBlock}\n                      >\n                        ورود\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </form>\n              </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nexport default Login;\n",["295","296","297"],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/index.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/TestPage/index.tsx",["298","299","300","301"],"import React from 'react'\n\nconst index = () => {\n    return (\n        <div>\n           this is a test page  \n        </div>\n    )\n}\n\nexport default index\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/index.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/services/mirage/scenarios/basicScenario.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/BannerNav.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/components/LessonLeftSidebar.tsx",["302"],"import { List } from '@material-ui/core';\nimport { Edit } from '@material-ui/icons';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport CollapseList from 'Scenes/components/CollapseList';\nimport ExamCard from 'Scenes/components/ExamCard';\nimport { lessonExamsFetcher, lessonExamsKey } from 'services/api/lesson';\nimport useSWR from 'swr';\n\nconst examss = [\n  {\n    title: 'آزمون ۱',\n    date: ' ۵ آذر',\n    time: '۲۰ دقیقه',\n    status: 'شروع نشده',\n  },\n  {\n    title: 'آزمون 2',\n    date: ' 6 آذر',\n    time: '۲۰ دقیقه',\n    status: 'شروع نشده',\n  },\n];\n\nconst LessonLeftSidebar = () => {\n  const { id: lessonId } = useParams<{id: string}>();\n  const { data: examsData } = useSWR([lessonExamsKey, lessonId], lessonExamsFetcher);\n  const exams = examsData || [];\n  \n  const ExamList = () => (\n    <List disablePadding>\n      {exams.map(({title, date, time, status}: {title: string, date: string, time: string, status: string}) => (\n        <ExamCard \n          key={title}\n          ExamName={title}\n          ExamDate={date}\n          ExamTime={time}\n          ExamStatus={status}\n        />\n      ))}\n    </List>\n  );\n\n  return (\n    <div>\n      <List>\n        <CollapseList \n          listTitle=\"آزمون ها\" \n          ListIcon={<Edit />}\n          ListComponent={ExamList}\n          listCount={exams.length}\n        />\n      </List>\n    </div>\n  );\n};\n\nexport default LessonLeftSidebar;","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/components/LessonCenterSection.tsx",["303"],"import { Card } from '@material-ui/core';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport FilterSelection from 'Scenes/components/FilterSelection';\nimport MessageList from 'Scenes/components/MessageList';\nimport Spacer from 'Scenes/components/Spacer';\nimport { IMessageCardProps } from 'Scenes/components/MessageCard';\nimport { classroomInfoFetcher, classroomInfoKey, lessonMessagesFetcher, lessonMessagesKey } from 'services/api/lesson';\nimport useMessageFilter from 'services/hooks/useMessageFilter';\nimport useSWR from 'swr';\nimport ScrollToTopOnMount from 'Scenes/components/ScrollToTopOnMount';\n\nconst Filler = ({ text, height }: {text:string, height: string}) => (\n  <Card \n    style={{\n      backgroundColor: 'gainsboro',\n      height,\n    }}\n    elevation={0}\n  >\n    {text}\n  </Card>\n);\n\nconst LessonCenterSection = () => {\n  const { id: lessonId } = useParams<{id: string}>();\n  const [filter] = useMessageFilter();\n  const { data: messages } = useSWR<IMessageCardProps[]>([lessonMessagesKey, lessonId, filter.query], lessonMessagesFetcher);\n  const { data: classroomInfo } = useSWR([classroomInfoKey, lessonId], classroomInfoFetcher);\n  const messageCardMocks = messages ||[];\n\n   return (\n    <>\n      <ScrollToTopOnMount />\n      <Filler height=\"100px\" text=\"insert create post component here\"/>\n      <Spacer spacing={2} orientation=\"h\"/>\n      <FilterSelection title={classroomInfo?.name}/>\n      <Spacer spacing={2} orientation=\"h\"/>\n      <MessageList messages={messageCardMocks}/>\n    </>\n  );\n};\n\nexport default LessonCenterSection;","/Users/sedali/Documents/MyProjects/felms/src/Scenes/LessonPage/components/LessonRightSidebar.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/services/LocalStorage/localStorage.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/services/axios/axios.ts",["304"],"import axios from \"axios\";\nimport {axiosInterceptor} from \"./axiosInterceptor\"\nconst baseURL = \"/api\";\nexport const axiosInstance = axios.create({\n  baseURL,\n});\n\n// export const axiosInstanceNoAuth = axios.create({\n//   baseURL: \"https://api.restino.ir/accounts/api/v1\",\n// });\n\naxiosInterceptor(axiosInstance);\n","/Users/sedali/Documents/MyProjects/felms/src/services/Contexts/UserContext/index.ts",["305","306","307","308"],"import { createContext, Dispatch, useContext } from \"react\";\nimport { AppActions } from \"../AppActions\";\nimport { IUserState } from \"./models\";\nexport const initial: IUserState = {\n  username: \"amirreza\",\n  idNumber: \"963613009\",\n  fullName: \"امیررضا اسماعیلی\",\n  isAuth: true,\n  role: \"professor\",\n};\n\nexport const userContext = createContext<IUserState>(initial);\nexport const userDispatchContext = createContext<Dispatch<AppActions>>(\n  () => {}\n);\n\nexport const useUserState = () => useContext(userContext);\nexport const useUserDispatch = () => useContext(userDispatchContext);\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/BaseLayout.tsx",["309"],"import { Grid } from '@material-ui/core';\nimport React, { ComponentType } from 'react';\nimport Navbar from 'Scenes/MainPage/components/Navbar';\nimport Spacer from './Spacer';\n\ninterface IBaseLayoutProps {\n  CenterComponent: ComponentType,\n  RightComponent: ComponentType,\n  LeftComponent: ComponentType,\n}\n\nconst BaseLayout = ({CenterComponent, RightComponent, LeftComponent}: IBaseLayoutProps ) => {\n  return (\n    <Grid container direction=\"column\">\n      <Navbar />\n      <Spacer spacing={2} orientation=\"h\"/>\n      <Grid item xs container wrap=\"nowrap\">\n        <Grid item xs={3}>\n          <RightComponent />\n        </Grid>\n        <Spacer spacing={2} orientation=\"v\"/>\n        <Grid item xs>\n          <CenterComponent />\n        </Grid>\n        <Spacer spacing={2} orientation=\"v\"/>\n        <Grid item xs={3}>\n          <LeftComponent />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default BaseLayout;","/Users/sedali/Documents/MyProjects/felms/src/services/axios/axiosInterceptor.ts",["310","311","312"],"import { AxiosInstance } from \"axios\";\nimport { redirect } from \"services/navigation\";\nimport { createTokenObj, LSService } from \"../LocalStorage/localStorage\";\nimport { IRefreshTokenResponse } from \"./types\";\n\nlet isProfileReq = false;\n\nexport const axiosInterceptor = (axiosInstance: AxiosInstance) => {\n  axiosInstance.interceptors.request.use(\n    (config) => {\n      const token = LSService.getAccessToken();\n      if (token) {\n        config.headers[\"Authorization\"] = `Bearer ${token}`;\n      }\n      // config.headers[\"Content-type\"] = \"aapplication/json\";\n      return config;\n    },\n    (error) => {\n      Promise.reject(error);\n    }\n  );\n  axiosInstance.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      const originalRequest = error.config;\n      if (originalRequest.url === \"/accounts/api/v1/profile/\")\n        isProfileReq = true;\n\n      if (\n        error.response?.status === 401 &&\n        originalRequest.url === \"/accounts/api/v1/refresh-token/\"\n      ) {\n        LSService.clearToken();\n        !isProfileReq && redirect(\"/login\");\n        return Promise.reject(error);\n      }\n\n      if (\n        error.response?.status === 401 &&\n        !originalRequest._retry &&\n        originalRequest.url !== \"/accounts/api/v1/authenticate/\" &&\n        LSService.getRefreshToken()\n      ) {\n        originalRequest._retry = true;\n\n        return axiosInstance\n          .post<IRefreshTokenResponse>(\"/accounts/api/v1/refresh-token/\", {\n            refresh: LSService.getRefreshToken(),\n          })\n          .then((res) => {\n            if (res.status === 200) {\n              //1)save token in ls\n              LSService.setToken(\n                createTokenObj(res.data.access, LSService.getRefreshToken())\n              ); //res.data is an object {access , refresh}\n              //2)Change Authoriazation Header\n              axiosInstance.defaults.headers.common[\n                \"Authorization\"\n              ] = `Bearer ${LSService.getAccessToken()}`;\n              return axiosInstance(originalRequest);\n            }\n            return null;\n          });\n      }\n      return Promise.reject(error);\n    }\n  );\n};\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/Spacer.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/CollapseList.tsx",["313","314"],"import { Collapse, ListItem, ListItemIcon, ListItemText, makeStyles } from '@material-ui/core';\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\nimport React, { ComponentType, ReactNode, useState } from 'react';\n\n\ninterface ICollapseListProps {\n  listTitle: string,\n  ListIcon?: ReactNode,\n  ListComponent: ComponentType,\n  listCount?: number,\n}\n\nconst useStyles = makeStyles((theme) => ({\n  countBadge: {\n    display: 'inline',\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingLeft: theme.spacing(1),\n    borderRadius: 4,\n    backgroundColor: theme.palette.grey[300],\n  }\n}));\n\nconst CollapseList = ({listTitle, ListIcon, ListComponent, listCount}: ICollapseListProps) => {\n  const classes = useStyles();\n  \n  const [isCollapsed, setIsCollapsed] = useState(false);\n  return (\n    <>\n      <ListItem button onClick={() => setIsCollapsed((ps) => !ps)}>\n        <ListItemIcon >{ListIcon}</ListItemIcon>\n        <ListItemText>\n          {listTitle}\n          {listCount && <div className={classes.countBadge}>{listCount}</div>}\n        </ListItemText>\n        {isCollapsed ? <ExpandMore /> : <ExpandLess />}\n      </ListItem>\n      {ListComponent && \n        <Collapse in={!isCollapsed}>\n          <ListComponent />\n        </Collapse>\n      }\n    </>\n  );\n};\n\nexport default CollapseList;","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/UserCard.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/services/hooks/useMessageFilter.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ScrollToTopOnMount.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/HomeLeftSidebar.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/HomeRightSidebar.tsx",["315","316"],"import React from \"react\";\nimport LessonsList from \"Scenes/components/LessonsList\";\nimport { lessonsFetcher, lessonsKey } from \"services/api/user\";\nimport { useUserState } from \"services/Contexts/UserContext\";\nimport useSWR from \"swr\";\n\nconst HomeRightSidebar = () => {\n  const { idNumber } = useUserState();\n  const {data:classData} = useSWR(lessonsKey , lessonsFetcher)\n  console.log(classData ,' in component')\n\n  // return <LessonsListSkeleton/>\n  return <LessonsList idNumber={idNumber} />;\n};\n\nexport default HomeRightSidebar;\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/HomeCenterSection.tsx",["317","318","319"],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ExamCard.js",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/MessageList.tsx",["320"],"import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport MessageCard, { IMessageCardProps } from 'Scenes/components/MessageCard';\n\nconst useStyles = makeStyles((theme) => ({\n  messageItem: {\n    marginBottom: theme.spacing(2),\n  }\n}));\n\nconst MessageList = ({messages}: {messages: IMessageCardProps[]}) => {\n  const classes = useStyles();\n  return (\n    <>\n      {\n        messages.map(({message, userFullName, avatarUrl,\n           messageDate, attachedFiles, classRoomName, userAnswers,\n            user, classroom}) => (\n          <MessageCard\n            key={`${userFullName}-${messageDate}`}\n            className={classes.messageItem}\n            message={message}\n            userFullName={userFullName}\n            avatarUrl={avatarUrl}\n            messageDate={messageDate}\n            attachedFiles={attachedFiles}\n            classRoomName={classRoomName}\n            userAnswers={userAnswers}\n            user={user}\n            classroom={classroom}\n          />\n        ))\n      }\n    </>\n  );\n};\n\nexport default MessageList;","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/FilterSelection.tsx",["321"],"import { Card, Grid, InputAdornment, makeStyles, MenuItem, TextField } from '@material-ui/core';\nimport { FilterList } from '@material-ui/icons';\nimport { MessageFilters } from 'constants/constants';\nimport moment from 'moment-jalaali';\nimport React, { useEffect, useRef, useState } from 'react';\nimport useMessageFilter, { MessageFilterQuery } from 'services/hooks/useMessageFilter';\nimport Spacer from './Spacer';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    backgroundColor: theme.palette.grey[100],\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n  }\n}));\n\nconst FilterSelection : React.FC<{ title: string }> = ({ title }) => {\n  const classes = useStyles();\n\n  const [filter, setFilter] = useMessageFilter();\n  const allFilters = Object.values(MessageFilters);\n  const [currentTime, setCurrentTime] = useState('');\n  const timerRef = useRef<number>();\n\n  useEffect(() => {\n    timerRef.current = window.setInterval(() => setCurrentTime(moment(new Date()).format('hh:mm:ss')), 1000);\n    return () => {\n      clearInterval(timerRef.current);\n    };\n  }, [setCurrentTime]);\n\n  // fix history issue\n  const handleFilterChange = (filterQuery: MessageFilterQuery) => {\n    setFilter(filterQuery);\n  };\n\n  // const currentTime = '۲۰:۳۰:۳۲';\n\n  return (\n    <Grid container>\n      <Grid item xs>\n        <Card className={classes.card} elevation={0}>\n          <Grid container>\n            <Grid item>{title}</Grid>\n            <Grid item xs />\n            <Grid item>{currentTime}</Grid>\n          </Grid>\n        </Card>\n      </Grid>\n      <Spacer orientation=\"v\" spacing={2}/>\n      <Grid item xs={3}>\n        <TextField \n          value={filter.title}\n          size=\"small\" \n          variant=\"outlined\" \n          select \n          fullWidth\n          InputProps={{startAdornment: (\n            <InputAdornment position=\"start\">\n              <FilterList />\n            </InputAdornment>\n          )}}\n        >\n          {allFilters.map(({title: filterTitle, query: filterQuery}) => (\n            <MenuItem \n              key={filterQuery || 'ALL'} \n              value={filterTitle} \n              onClick={() => handleFilterChange(filterQuery)}\n            >\n              {filterTitle}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FilterSelection;\n","/Users/sedali/Documents/MyProjects/felms/src/services/api/lesson/index.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/services/Contexts/UserContext/models.ts",["322"],"import { IRules } from \"services/role/model\";\n\nexport interface IUserState {\n  username: string;\n  fullName?: string,\n  idNumber?: string,\n  avatarUrl?: string,\n  isAuth: boolean;\n  role: keyof IRules;\n}\n//-----------user acitions------------------\nexport enum EUserActionTypes {\n  LOGIN,\n  LOGOUT,\n}\ninterface ILoginAction {\n  type: EUserActionTypes.LOGIN;\n  payload: IUserState;\n}\ninterface ILogoutAction {\n  type: EUserActionTypes.LOGOUT;\n}\n\nexport type UserActions = ILoginAction | ILogoutAction;\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/MainPage/components/Navbar.tsx",["323","324"],"import {\n  Avatar,\n  Button,\n  Grid,\n  IconButton,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Home, Settings } from \"@material-ui/icons\";\nimport React, { ReactElement, SyntheticEvent, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport BannerNav from \"Scenes/components/BannerNav\";\nimport ProfilePopover from \"../../components/ProfilePopover\";\n\ninterface ILink {\n  title: string;\n  path: string;\n  IconElement?: ReactElement;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  navbarBanner: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: theme.spacing(10),\n    backgroundColor: theme.palette.grey[\"300\"],\n  },\n  navbar: {\n    minHeight: theme.spacing(5),\n    padding: theme.spacing(0, 1),\n    backgroundColor: theme.palette.grey[\"100\"],\n    position: \"sticky\",\n    top: 0,\n    zIndex: theme.zIndex.appBar,\n  },\n  linkContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatarContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  settingButtonContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n  },\n  settingButton: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n}));\n\nconst navbarLinks: ILink[] = [\n  { title: \"خانه\", path: \"/\", IconElement: <Home /> },\n  { title: \"گلستان\", path: \"https://golestan.ui.ac.ir/\" },\n  { title: \"آزمون\", path: \".\" },\n  { title: \"تغذیه\", path: \".\" },\n  { title: \"کتابخانه\", path: \".\" },\n];\n\nconst Navbar = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const [\n    profilePopoverAnchor,\n    setProfilePopoverAnchor,\n  ] = useState<HTMLElement | null>(null);\n\n  const handleNavigateToLink = (path: string) => history.push('/');\n\n  const handleSettingClick = () => {\n    return;\n  };\n\n  const handleAvatarClick = (e: SyntheticEvent<HTMLElement>) => {\n    setProfilePopoverAnchor(e.currentTarget);\n  };\n\n  const renderLink = (link: ILink) => {\n    const IconElement = link.IconElement || null;\n    return (\n      <Grid className={classes.linkContainer} key={link.title} item>\n        <Button\n          disableElevation\n          size=\"large\"\n          variant=\"text\"\n          {...(IconElement && { startIcon: IconElement })}\n          onClick={() => handleNavigateToLink(link.path)}\n        >\n          {link.title}\n        </Button>\n      </Grid>\n    );\n  };\n\n  const renderNavbarBannerImage = () => {\n    return <BannerNav />;\n  };\n  const renderNavbar = () => {\n    return (\n      <Grid className={classes.navbar} container>\n        {navbarLinks.map(renderLink)}\n\n        <Grid item xs />\n\n        <Grid className={classes.settingButtonContainer} item>\n          <IconButton onClick={handleSettingClick}>\n            <Settings className={classes.settingButton} />\n          </IconButton>\n        </Grid>\n        <Grid className={classes.avatarContainer} item>\n          <IconButton onClick={handleAvatarClick}>\n            <Avatar className={classes.avatar} src=\"avatar\" />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      {renderNavbarBannerImage()}\n      {renderNavbar()}\n      <ProfilePopover\n        open={!!profilePopoverAnchor}\n        anchorEl={profilePopoverAnchor}\n        onClose={() => setProfilePopoverAnchor(null)}\n      />\n    </>\n  );\n};\n\nexport default Navbar;\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ClassCard.tsx",["325"],"import { Avatar, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core';\nimport React, { ReactNode } from 'react';\n\n\ninterface IClassCardProps {\n  title: string,\n  Icon?: any,\n  primaryDesc?: string,\n  secondaryDesc?: string\n}\n\nconst ClassCard = ({title, Icon, primaryDesc, secondaryDesc}: IClassCardProps) => {\n  return (\n    <ListItem alignItems=\"flex-start\" button>\n      <ListItemIcon><Avatar><Icon /></Avatar></ListItemIcon>\n      <ListItemText \n        primary={title}\n        secondary={\n          <>\n            <Typography variant=\"body1\">{primaryDesc}</Typography>\n            <Typography variant=\"caption\">{secondaryDesc}</Typography>\n          </>\n        }\n      />\n    </ListItem>\n  );\n};\n\nexport default ClassCard;","/Users/sedali/Documents/MyProjects/felms/src/services/navigation.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/constants/constants.ts",["326"],"import { IMessageFilter } from \"services/hooks/useMessageFilter\";\n\nexport const SearchQueryParams = {\n  messageFilter: 'message-filter',\n};\n\nexport const MessageFilters: Record<string, IMessageFilter> = {\n  all: {title: 'همه', query: undefined},\n  message: {title: 'پیام', query: 'message'},\n  assignment: {title: 'تکلیف', query: 'assignment'},\n};","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ProfilePopover.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/MessageCard.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/services/api/main/index.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/index.js",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/components/ProfileRightSidebar.js",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/LessonsList.js",["327","328","329","330"],"import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport useSWR from 'swr';\nimport ClassTwoToneIcon from '@material-ui/icons/ClassTwoTone';\n\nimport { lessonsFetcher, lessonsKey } from 'services/api/user';\nimport ClassCard from 'Scenes/components/ClassCard';\n\n\n\nexport default function LessonsList({idNumber}) {\n//  const { data: { lessons } } = useSWR([lessonsKey, userId], lessonsFetcher);\n    const lessons = lessonsMock;\n\n    return <Fragment >\n        {lessons.map((lesson) => \n            <ClassCard\n            key={lesson.code}   \n            Icon= {ClassTwoToneIcon}\n            title={lesson.title}\n            primaryDesc={`کد درس ${lesson.code}`}\n            secondaryDesc={`${lesson.memebersNumber} عضو`}/>)}\n        </Fragment>;\n};\n\nconst lessonsMock = [\n    {title: 'مهندسی نت', code: '36-20-027', memebersNumber: '42'},\n    {title: 'مباحث ویژه 1', code: '36-21-025', memebersNumber: '29'},\n    {title: 'زبان تخصصی', code: '36-21-366', memebersNumber: '12'}\n];\n\n\n  ","/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/components/EmptySide.js",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/ProfilePage/components/ProfileCard.js",["331","332","333","334"],"import React from 'react';\nimport useSWR from 'swr';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles, Grid, Card, Typography, ButtonBase } from '@material-ui/core';\n\nimport { profileFetcher, profileKey } from 'services/api/user';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    width: '100%',\n  },\n  image: {\n    width: 200,\n    height: 200,\n  },\n  \n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n    \n  },\n  text: {\n    padding: theme.spacing(1),\n\n  }\n}));\n\nexport default function ProfileCard() {\n  const classes = useStyles();\n  const { id: userId } = useParams();\n\n  // const { data: { avatarUrl, fullName, username, idNumber, role } } = useSWR([profileKey, userId], profileFetcher);\n  const { avatarUrl, fullName, username, idNumber, role } = mockedData;\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.paper}>\n        <Grid container spacing={2}>\n          <Grid item>\n            <ButtonBase className={classes.image}>\n              <img className={classes.img} alt=\"complex\" src={avatarUrl} />\n            </ButtonBase>\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n              <Typography className={classes.text} variant=\"body1\" gutterBottom>\n                نام و نام خانوادگی:  {fullName}\n                </Typography>\n                <Typography className={classes.text} gutterBottom variant=\"body1\">\n                نام کاربری:  {username}\n                </Typography>\n                <Typography className={classes.text} gutterBottom variant=\"body1\">\n                  شماره کاربری:  {idNumber}\n                </Typography>\n                <Typography className={classes.text} gutterBottom variant=\"body1\">\n                  سطح کاربری:  {role}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Card>\n    </div>\n  );\n}\n\nconst mockedData = {\n  avatarUrl:'http://lms.ui.ac.ir/publicnew/user/8f/9d/04/494f6_497c.jpg?c=d111',\n  fullName:'امیر مهدی',\n  username:'amirmahdi' ,\n  idNumber: '963613048',\n  role: 'دانشجو',\n};\n","/Users/sedali/Documents/MyProjects/felms/src/services/api/user/index.ts",["335"],"import { axiosInstance } from \"services/axios/axios\";\n\nexport const userBaseUrl = '/user';\n\nexport const profileKey = '/profile';\nexport const profileFetcher = async (key: string, userId: any) => {\n  const {data} = await axiosInstance.get(`${userBaseUrl}/${userId}/profile`);\n  return data.profile;\n};\n\nexport const lessonsKey = '/lessons';\nexport const lessonsFetcher = async (key: string, userId: string) => {\n  const {data} = await axiosInstance.get(`${userBaseUrl}/${userId}/lessons`);\n  console.log(data)\n  return data.lessons;\n};\n\n\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/MessageListSkeleton.tsx",["336"],"import { Card, Grid, makeStyles, MenuItem } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport React from \"react\";\n\ninterface IFile {\n  fileName: string;\n  fileUrl: string;\n}\n\ninterface IUserAnswer {\n  userFullName: string;\n  avatarUrl?: string;\n  answer: string;\n}\n\nexport interface IMessageCardProps {\n  userFullName: string;\n  avatarUrl?: string;\n  classRoomName?: string;\n  message: string;\n  attachedFiles?: IFile[];\n  userAnswers?: IUserAnswer[];\n  messageDate: Date;\n  user?: any;\n  classroom?: any;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.grey[100],\n  },\n  headerContainer: {\n    marginBottom: theme.spacing(1),\n  },\n  contentContainer: {\n    marginBottom: theme.spacing(1),\n  },\n  footerContainer: {},\n  avatarContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  moreButtonContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  dateStringContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst MessageCardSkeleton = () => {\n  const classes = useStyles();\n\n  const renderHeader = () => {\n    return (\n      <Grid\n        className={classes.headerContainer}\n        item\n        xs={12}\n        container\n        spacing={2}\n      >\n        <Grid className={classes.avatarContainer} item>\n          <Skeleton variant=\"circle\" width={40} height={40} />\n        </Grid>\n        <Grid item container xs direction=\"column\">\n          <Grid item>\n            <Skeleton variant=\"text\" width={100} />\n          </Grid>\n          <Grid item>\n            <Skeleton variant=\"text\" width={100} />\n          </Grid>\n        </Grid>\n        <Grid className={classes.moreButtonContainer} item></Grid>\n      </Grid>\n    );\n  };\n\n  const renderContent = () => {\n    return (\n      <Grid\n        className={classes.contentContainer}\n        item\n        xs={12}\n        container\n        spacing={2}\n      >\n        <Grid item xs={12}>\n          <Skeleton variant=\"text\" />\n          <Skeleton variant=\"text\" />\n          {/* <Skeleton variant=\"rect\" width={210} height={118} /> */}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  const renderFooter = () => {\n    return (\n      <Grid\n        className={classes.footerContainer}\n        item\n        xs={12}\n        container\n        spacing={2}\n      >\n        <Grid item>\n          <Skeleton variant=\"rect\" width={80} height={30} />\n        </Grid>\n        <Grid item xs />\n        <Grid className={classes.dateStringContainer} item>\n          <Skeleton variant=\"text\" width={80} />\n        </Grid>\n      </Grid>\n    );\n  };\n\n\n\n  return (\n    <>\n      {Array(5)\n        .fill(\"\")\n        .map((item) => (\n          <Card className={`${classes.card} mb-4`} elevation={0}>\n            <Grid container>\n              {renderHeader()}\n              {renderContent()}\n              {renderFooter()}\n            </Grid>\n          </Card>\n        ))}\n    </>\n  );\n};\n\nexport default MessageCardSkeleton;\n","/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/MessageCardSkeleton.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/LessonListSkeleton.tsx",[],["337","338","339"],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/ClassCardSkeleton.tsx",[],"/Users/sedali/Documents/MyProjects/felms/src/services/utils/i18nUtils.ts",[],"/Users/sedali/Documents/MyProjects/felms/src/Scenes/components/SendMessage.tsx",["340","341","342","343","344"],"// import components\nimport React, {useState, useRef} from \"react\";\nimport { axiosInstance } from \"services/axios/axios\";\nimport { useUserState } from 'services/Contexts/UserContext';\nimport { createStyles, makeStyles, Theme, useTheme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\nimport { Card } from \"@material-ui/core\";\n\n// style of components\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            width: '100%',\n            margin: theme.spacing(1, 'auto'),\n\n\n        },\n        root: {\n            '& .MuiTextField-root': {\n                margin: theme.spacing(1),\n                width: '100%'\n            },\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n        },\n        row: {\n            width: '100%',\n            display: 'flex',\n        },\n        formControl: {\n            margin: theme.spacing(1),\n            marginRight: theme.spacing(4),\n            minWidth: 120,\n        },\n        chooseButton: {\n            margin: theme.spacing(1),\n        },\n        spanOfFileName : {\n            fontSize: '0.8rem',\n            margin: theme.spacing(1),\n            display: 'flex',\n            alignItems: 'center',\n        },\n        chooseClass : {\n            marginLeft: 'auto',\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n        chooseFile : {\n            position: 'absolute',\n            opacity : 0\n        },\n        submitBtn : {\n            margin: theme.spacing(1),\n            padding : theme.spacing(1),\n            paddingLeft: theme.spacing(4),\n            paddingRight: theme.spacing(4),\n        },\n        alert : {\n            width: '100%',\n            '& > * + *': {\n                marginTop: theme.spacing(2),\n            },\n            margin: theme.spacing(1),\n        }\n    }),\n);\n\nconst SendMessage = () => {\n\n    const {idNumber: userIdNumber} = useUserState();\n    const classes = useStyles();\n\n    // handler and state of text area component\n    const [textValue, setTextValue] = useState('');\n    const handleChangeTextArea = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setTextValue(event.target.value);\n    };\n\n    // handler and state of select class component\n    const [classState, setClassState] = useState('');\n    const handleChangeClass = (event: React.ChangeEvent<{ value: unknown }>) => {\n        let classChosen: string = event.target.value as string;\n        setClassState(classChosen);\n    };\n\n    // get list of class from backEnd\n    const listOfClass = () => {\n        let classList = [];\n\n        // request for get list of classes that this user member of that\n        // axiosInstance.post(\"/classlist\", userIdNumber).then( res =>{\n        //     classList = res.classes;\n        // })\n        //     .catch(error => {\n        //         alert(error);\n        //     });\n\n        classList = [\"طراحی شی گرا\", \"سیگنال و سیستم\", \"مهندسی اینترنت\", \"رایانش امن\"];\n        return (\n            classList.map( (className) => <MenuItem value={className}>{className}</MenuItem>)\n        );\n    };\n\n\n    const fileInput = useRef(null);\n    const [fileState, setFileState] = useState({\n        visibilityFileButton: false,\n        hasFile: false,\n        fileName: \"\",\n    });\n    // define component for select file\n    const ChooseFile = () => {\n        if (fileState.visibilityFileButton){\n            return (\n                <>\n                    <Button className={classes.chooseButton} variant=\"outlined\">\n                        انتخاب فایل پیوست\n                        <input className={classes.chooseFile} type=\"file\" onChange={handleSelectFile} ref={fileInput}/>\n                    </Button>\n                    {showFileName()}\n                </>\n            );\n        }\n        return null;\n    };\n\n    // this function for show a span include file name\n    const showFileName = () => {\n        return fileState.hasFile ? <span className={classes.spanOfFileName}>فایل انتخاب شده: <b>{fileState.fileName}</b></span> : null;\n    };\n\n    // this function call when attacked file selected\n    const handleSelectFile = (event: React.ChangeEvent<HTMLInputElement>) => {\n\n        // this if for check that file is selected\n        if (event.target.files![0] !== undefined){\n            setFileState((prevState) => ({\n                    ...prevState,\n                    hasFile: true,\n                    fileName: event.target.files![0].name,\n                })\n            );\n        }\n\n    };\n\n\n    const [typeOfMessageState, setTypeOfMessageState] = useState('');\n    const handleChangeSelectType = (event: React.ChangeEvent<{ value: unknown }>) => {\n        let typeChosen: string = event.target.value as string;\n        setTypeOfMessageState(typeChosen);\n\n        if ( typeChosen === 'homeWork' ){\n            setFileState((prevState) => ({\n                    ...prevState,\n                    visibilityFileButton: true,\n                })\n            );\n        }\n        else {\n            setFileState((prevState) => ({\n                    ...prevState,\n                    visibilityFileButton: false,\n                })\n            );\n        }\n    };\n\n    const submitForm = (event: React.FormEvent) => {\n\n        event.preventDefault();\n\n        if ( classState === '' ){\n            setAlertState({\n                showAlert: true,\n                alertText: 'لطفا یک کلاس برای ارسال پیام انتخاب کنید.',\n                isError: true\n            });\n        }\n        else if (typeOfMessageState === ''){\n            setAlertState({\n                showAlert: true,\n                alertText: 'لطفا نوع پیام را مشخص کنید.',\n                isError: true\n            });\n        }\n        else {\n\n            // @ts-ignore\n            const attachedFile = fileInput.current.files[0];\n            let fileData = new FormData();\n            fileData.append('file-homeWork', attachedFile);\n            let message = {\n                idSender : userIdNumber,\n                messageType : typeOfMessageState,\n                messageText : textValue,\n                messageClass : classState,\n                hasFile : fileState.hasFile,\n                file : fileData\n            };\n\n            //send message for backEnd\n            // axiosInstance.post(\"/sendMessage\", message).then( res =>{\n            //     if (res.status=== 'ack') {\n            //         setAlertState({\n            //             showAlert: true,\n            //             alertText: 'پیام شما با موفقیت ثبت شد.',\n            //             isError: false\n            //         });\n            // })\n            //     .catch(error => {\n            //         alert(error);\n            //     });\n            setAlertState({\n                showAlert: true,\n                alertText: 'پیام شما با موفقیت ثبت شد.',\n                isError: false\n            });\n\n            // reset states\n            setTimeout(() => {\n                setTextValue('');\n                setTypeOfMessageState('');\n                setClassState('');\n                setFileState({\n                    visibilityFileButton: false,\n                    hasFile: false,\n                    fileName: \"\",\n                });\n                setAlertState({\n                    showAlert: false,\n                    alertText: '',\n                    isError: false\n                });\n            }, 500);\n        }\n    };\n\n    const [alertState, setAlertState] = useState({\n        showAlert: false,\n        alertText: '',\n        isError: false\n    });\n    const showAlert = () => {\n        if (alertState.showAlert){\n            if (alertState.isError){\n                return (\n                    <Alert variant=\"filled\" severity=\"error\">\n                        {alertState.alertText}\n                    </Alert>\n                );\n            }\n            else {\n                return (\n                    <Alert variant=\"filled\" severity=\"success\">\n                        {alertState.alertText}\n                    </Alert>\n                );\n            }\n        }\n        return null;\n    };\n\n    return (\n        <Card elevation={0} className={classes.container}>\n            <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={submitForm}>\n                <div className={classes.row}>\n                    <TextField\n                        id=\"outlined-multiline-static\"\n                        label=\"متن پیام\"\n                        multiline\n                        rows={4}\n                        variant=\"outlined\"\n                        value={textValue}\n                        onChange={handleChangeTextArea}\n                    />\n                </div>\n                <div className={classes.row}>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-outlined-label\">انتخاب کلاس</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-outlined-label\"\n                            id=\"demo-simple-select-outlined\"\n                            value={classState}\n                            onChange={handleChangeClass}\n                            label=\"انتخاب کلاس\"\n                        >\n                            {listOfClass()}\n                        </Select>\n                    </FormControl>\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-outlined-label\">نوع پیام</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-outlined-label\"\n                            id=\"demo-simple-select-outlined\"\n                            value={typeOfMessageState}\n                            onChange={handleChangeSelectType}\n                            label=\"نوع پیام\"\n                        >\n                            <MenuItem value=\"usual\">عادی</MenuItem>\n                            <MenuItem value=\"homeWork\">تکلیف</MenuItem>\n                        </Select>\n                    </FormControl>\n                    {ChooseFile()}\n                </div>\n                <div className={classes.row}>\n                    <Button className={classes.submitBtn} color=\"primary\" size=\"large\" variant=\"contained\" type=\"submit\">\n                        تأیید\n                    </Button>\n                    <div className={classes.alert}>\n                        {showAlert()}\n                    </div>\n                </div>\n            </form>\n        </Card>\n    );\n};\n\nexport default SendMessage;",{"ruleId":"345","replacedBy":"346"},{"ruleId":"347","replacedBy":"348"},{"ruleId":"349","replacedBy":"350"},{"ruleId":"351","severity":1,"message":"352","line":13,"column":39,"nodeType":"353","messageId":"354","endLine":13,"endColumn":51,"fix":"355"},{"ruleId":"356","severity":1,"message":"357","line":53,"column":29,"nodeType":"358","messageId":"359","endLine":54,"endColumn":1,"fix":"360"},{"ruleId":"356","severity":1,"message":"357","line":55,"column":23,"nodeType":"361","messageId":"359","endLine":56,"endColumn":1,"fix":"362"},{"ruleId":"363","severity":1,"message":"364","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":22},{"ruleId":"363","severity":1,"message":"367","line":2,"column":19,"nodeType":"365","messageId":"366","endLine":2,"endColumn":25},{"ruleId":"363","severity":1,"message":"368","line":1,"column":10,"nodeType":"365","messageId":"366","endLine":1,"endColumn":16},{"ruleId":"363","severity":1,"message":"367","line":2,"column":19,"nodeType":"365","messageId":"366","endLine":2,"endColumn":25},{"ruleId":"363","severity":1,"message":"367","line":1,"column":19,"nodeType":"365","messageId":"366","endLine":1,"endColumn":25},{"ruleId":"363","severity":1,"message":"369","line":2,"column":27,"nodeType":"365","messageId":"366","endLine":2,"endColumn":37},{"ruleId":"363","severity":1,"message":"370","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":16},{"ruleId":"356","severity":1,"message":"357","line":14,"column":48,"nodeType":"371","messageId":"359","endLine":15,"endColumn":1,"fix":"372"},{"ruleId":"373","severity":1,"message":"374","line":35,"column":7,"nodeType":"365","messageId":"366","endLine":35,"endColumn":12},{"ruleId":"375","severity":1,"message":"376","line":39,"column":5,"nodeType":"377","messageId":"378","fix":"379"},{"ruleId":"380","severity":1,"message":"381","line":39,"column":27,"nodeType":"353","messageId":"382","endLine":39,"endColumn":29},{"ruleId":"375","severity":1,"message":"383","line":40,"column":5,"nodeType":"377","messageId":"384","fix":"385"},{"ruleId":"356","severity":1,"message":"357","line":43,"column":29,"nodeType":"386","messageId":"359","endLine":44,"endColumn":1,"fix":"387"},{"ruleId":"356","severity":1,"message":"357","line":53,"column":6,"nodeType":"386","messageId":"359","endLine":54,"endColumn":1,"fix":"388"},{"ruleId":"389","severity":1,"message":"390","line":54,"column":44,"nodeType":"391","messageId":"392","endLine":54,"endColumn":47,"fix":"393"},{"ruleId":"356","severity":1,"message":"357","line":55,"column":80,"nodeType":"358","messageId":"359","endLine":56,"endColumn":1,"fix":"394"},{"ruleId":"356","severity":1,"message":"357","line":56,"column":26,"nodeType":"358","messageId":"359","endLine":57,"endColumn":1,"fix":"395"},{"ruleId":"389","severity":1,"message":"390","line":59,"column":12,"nodeType":"391","messageId":"392","endLine":59,"endColumn":15,"fix":"396"},{"ruleId":"356","severity":1,"message":"357","line":60,"column":19,"nodeType":"358","messageId":"359","endLine":61,"endColumn":1,"fix":"397"},{"ruleId":"356","severity":1,"message":"357","line":61,"column":25,"nodeType":"358","messageId":"359","endLine":62,"endColumn":1,"fix":"398"},{"ruleId":"356","severity":1,"message":"357","line":62,"column":7,"nodeType":"358","messageId":"359","endLine":63,"endColumn":1,"fix":"399"},{"ruleId":"345","replacedBy":"346"},{"ruleId":"347","replacedBy":"348"},{"ruleId":"349","replacedBy":"400"},{"ruleId":"356","severity":1,"message":"357","line":1,"column":26,"nodeType":"371","messageId":"359","endLine":2,"endColumn":1,"fix":"401"},{"ruleId":"356","severity":1,"message":"357","line":8,"column":6,"nodeType":"361","messageId":"359","endLine":9,"endColumn":1,"fix":"402"},{"ruleId":"356","severity":1,"message":"357","line":9,"column":2,"nodeType":"386","messageId":"359","endLine":10,"endColumn":1,"fix":"403"},{"ruleId":"356","severity":1,"message":"357","line":11,"column":21,"nodeType":"404","messageId":"359","endLine":12,"endColumn":1,"fix":"405"},{"ruleId":"363","severity":1,"message":"406","line":10,"column":7,"nodeType":"365","messageId":"366","endLine":10,"endColumn":13},{"ruleId":"363","severity":1,"message":"407","line":7,"column":10,"nodeType":"365","messageId":"366","endLine":7,"endColumn":27},{"ruleId":"356","severity":1,"message":"357","line":2,"column":52,"nodeType":"371","messageId":"359","endLine":3,"endColumn":1,"fix":"408"},{"ruleId":"363","severity":1,"message":"409","line":1,"column":25,"nodeType":"365","messageId":"366","endLine":1,"endColumn":33},{"ruleId":"363","severity":1,"message":"410","line":2,"column":10,"nodeType":"365","messageId":"366","endLine":2,"endColumn":20},{"ruleId":"363","severity":1,"message":"411","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":20},{"ruleId":"412","severity":1,"message":"413","line":14,"column":9,"nodeType":"391","messageId":"382","endLine":14,"endColumn":11},{"ruleId":"363","severity":1,"message":"414","line":2,"column":17,"nodeType":"365","messageId":"366","endLine":2,"endColumn":30},{"ruleId":"363","severity":1,"message":"415","line":1,"column":10,"nodeType":"365","messageId":"366","endLine":1,"endColumn":23},{"ruleId":"363","severity":1,"message":"416","line":4,"column":10,"nodeType":"365","messageId":"366","endLine":4,"endColumn":31},{"ruleId":"375","severity":1,"message":"376","line":26,"column":7,"nodeType":"377","messageId":"378","fix":"417"},{"ruleId":"363","severity":1,"message":"414","line":3,"column":17,"nodeType":"365","messageId":"366","endLine":3,"endColumn":30},{"ruleId":"363","severity":1,"message":"418","line":3,"column":32,"nodeType":"365","messageId":"366","endLine":3,"endColumn":41},{"ruleId":"356","severity":1,"message":"357","line":9,"column":63,"nodeType":"386","messageId":"359","endLine":10,"endColumn":1,"fix":"419"},{"ruleId":"356","severity":1,"message":"357","line":10,"column":42,"nodeType":"358","messageId":"359","endLine":11,"endColumn":1,"fix":"420"},{"ruleId":"363","severity":1,"message":"407","line":10,"column":10,"nodeType":"365","messageId":"366","endLine":10,"endColumn":27},{"ruleId":"363","severity":1,"message":"421","line":25,"column":9,"nodeType":"365","messageId":"366","endLine":25,"endColumn":22},{"ruleId":"422","severity":2,"message":"423","line":28,"column":17,"nodeType":"424","endLine":28,"endColumn":36},{"ruleId":"363","severity":1,"message":"407","line":3,"column":23,"nodeType":"365","messageId":"366","endLine":3,"endColumn":40},{"ruleId":"363","severity":1,"message":"425","line":6,"column":28,"nodeType":"365","messageId":"366","endLine":6,"endColumn":46},{"ruleId":"363","severity":1,"message":"426","line":1,"column":10,"nodeType":"365","messageId":"366","endLine":1,"endColumn":16},{"ruleId":"363","severity":1,"message":"427","line":9,"column":17,"nodeType":"365","messageId":"366","endLine":9,"endColumn":29},{"ruleId":"363","severity":1,"message":"428","line":9,"column":31,"nodeType":"365","messageId":"366","endLine":9,"endColumn":45},{"ruleId":"363","severity":1,"message":"418","line":2,"column":17,"nodeType":"365","messageId":"366","endLine":2,"endColumn":26},{"ruleId":"363","severity":1,"message":"429","line":1,"column":10,"nodeType":"365","messageId":"366","endLine":1,"endColumn":24},{"ruleId":"373","severity":1,"message":"430","line":2,"column":8,"nodeType":"365","messageId":"366","endLine":2,"endColumn":17},{"ruleId":"373","severity":1,"message":"431","line":3,"column":8,"nodeType":"365","messageId":"366","endLine":3,"endColumn":14},{"ruleId":"373","severity":1,"message":"432","line":6,"column":10,"nodeType":"365","messageId":"366","endLine":6,"endColumn":24},{"ruleId":"373","severity":1,"message":"433","line":6,"column":26,"nodeType":"365","messageId":"366","endLine":6,"endColumn":36},{"ruleId":"373","severity":1,"message":"431","line":2,"column":8,"nodeType":"365","messageId":"366","endLine":2,"endColumn":14},{"ruleId":"373","severity":1,"message":"434","line":6,"column":10,"nodeType":"365","messageId":"366","endLine":6,"endColumn":24},{"ruleId":"373","severity":1,"message":"435","line":6,"column":26,"nodeType":"365","messageId":"366","endLine":6,"endColumn":36},{"ruleId":"373","severity":1,"message":"436","line":39,"column":15,"nodeType":"365","messageId":"366","endLine":39,"endColumn":21},{"ruleId":"356","severity":1,"message":"357","line":14,"column":20,"nodeType":"358","messageId":"359","endLine":15,"endColumn":1,"fix":"437"},{"ruleId":"363","severity":1,"message":"438","line":1,"column":34,"nodeType":"365","messageId":"366","endLine":1,"endColumn":42},{"ruleId":"345","replacedBy":"439"},{"ruleId":"347","replacedBy":"440"},{"ruleId":"349","replacedBy":"441"},{"ruleId":"363","severity":1,"message":"442","line":3,"column":10,"nodeType":"365","messageId":"366","endLine":3,"endColumn":23},{"ruleId":"363","severity":1,"message":"443","line":5,"column":36,"nodeType":"365","messageId":"366","endLine":5,"endColumn":41},{"ruleId":"363","severity":1,"message":"444","line":5,"column":43,"nodeType":"365","messageId":"366","endLine":5,"endColumn":51},{"ruleId":"445","severity":1,"message":"446","line":201,"column":19,"nodeType":"447","messageId":"448","endLine":201,"endColumn":60},{"ruleId":"363","severity":1,"message":"449","line":204,"column":17,"nodeType":"365","messageId":"366","endLine":204,"endColumn":24},"no-native-reassign",["450"],"no-negated-in-lhs",["451"],"jsx-a11y/accessible-emoji",[],"prefer-template","Unexpected string concatenation.","BinaryExpression","unexpectedStringConcatenation",{"range":"452","text":"453"},"semi","Missing semicolon.","ExpressionStatement","missingSemi",{"range":"454","text":"455"},"ReturnStatement",{"range":"456","text":"455"},"@typescript-eslint/no-unused-vars","'TPermissions' is defined but never used.","Identifier","unusedVar","'Server' is defined but never used.","'random' is defined but never used.","'RouteProps' is defined but never used.","'IRoute' is defined but never used.","ImportDeclaration",{"range":"457","text":"455"},"no-unused-vars","'width' is defined but never used.","curly","Expected { after 'if' condition.","IfStatement","missingCurlyAfterCondition",{"range":"458","text":"459"},"eqeqeq","Expected '===' and instead saw '=='.","unexpected","Expected { after 'else'.","missingCurlyAfter",{"range":"460","text":"461"},"VariableDeclaration",{"range":"462","text":"455"},{"range":"463","text":"455"},"arrow-parens","Expected parentheses around arrow function argument.","ArrowFunctionExpression","expectedParens",{"range":"464","text":"465"},{"range":"466","text":"455"},{"range":"467","text":"455"},{"range":"468","text":"469"},{"range":"470","text":"455"},{"range":"471","text":"455"},{"range":"472","text":"455"},[],{"range":"473","text":"455"},{"range":"474","text":"455"},{"range":"475","text":"455"},"ExportDefaultDeclaration",{"range":"476","text":"455"},"'examss' is assigned a value but never used.","'IMessageCardProps' is defined but never used.",{"range":"477","text":"455"},"'Dispatch' is defined but never used.","'AppActions' is defined but never used.","'IUserState' is defined but never used.","no-empty-function","Unexpected empty arrow function.","'ComponentType' is defined but never used.","'AxiosInstance' is defined but never used.","'IRefreshTokenResponse' is defined but never used.",{"range":"478","text":"479"},"'ReactNode' is defined but never used.",{"range":"480","text":"455"},{"range":"481","text":"455"},"'renderMessage' is assigned a value but never used.","react/jsx-no-undef","'MessageListSkeleton' is not defined.","JSXIdentifier","'MessageFilterQuery' is defined but never used.","'IRules' is defined but never used.","'ReactElement' is defined but never used.","'SyntheticEvent' is defined but never used.","'IMessageFilter' is defined but never used.","'PropTypes' is defined but never used.","'useSWR' is defined but never used.","'lessonsFetcher' is defined but never used.","'lessonsKey' is defined but never used.","'profileFetcher' is defined but never used.","'profileKey' is defined but never used.","'userId' is assigned a value but never used.",{"range":"482","text":"455"},"'MenuItem' is defined but never used.",["450"],["451"],[],"'axiosInstance' is defined but never used.","'Theme' is defined but never used.","'useTheme' is defined but never used.","prefer-destructuring","Use array destructuring.","VariableDeclarator","preferDestructuring","'message' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[383,395],"`/api${  url}`",[1424,1424],";",[1465,1465],[361,361],[858,888],"{username = event.target.value;}",[898,928],"{password = event.target.value;}",[963,963],[1169,1169],[1213,1216],"(res)",[1300,1300],[1326,1326],[1346,1349],"(err)",[1372,1372],[1397,1397],[1404,1404],[25,25],[129,129],[131,131],[153,153],[78,78],[853,873],"{isProfileReq = true;}",[371,371],[413,413],[509,509]]